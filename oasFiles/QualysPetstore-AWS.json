{
    "info": {
        "title": "Qualys Pet Store Swagger API",
        "version": "4.0.0",
        "description": "Demo API with vulnerabilities\n<a href=\"/qualys-swagger-api-edited/swagger.json\">Swagger Json File Link</a>"
    },
    "host": "127.0.0.1:4010",
    "schemes": [
        "http"
    ],
    "basePath": "/qualys-swagger-api-edited",
    "swagger": "2.0",
    "paths": {
        "/api/puppies": {
            "get": {
                "tags": [
                    "Puppies"
                ],
                "description": "Returns all puppies",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "responses": {
                    "200": {
                        "description": "An array of puppies",
                        "schema": {
                            "$ref": "#/definitions/PuppyWithID"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Puppies"
                ],
                "description": "Creates a new puppy",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "puppy",
                        "description": "Puppy object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Puppy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created"
                    }
                }
            }
        },
        "/api/puppies/{id}": {
            "put": {
                "tags": [
                    "Puppies"
                ],
                "description": "Updates a single puppy",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Puppy",
                        "description": "Puppy object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Puppy"
                        }
                    },
                    {
                        "name": "id",
                        "description": "Puppy's id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 2147483647
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated"
                    },
                    "400": {
                        "description": "Puppy Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Puppies"
                ],
                "description": "Deletes a single puppy",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Puppy's id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 2147483647
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted"
                    },
                    "400": {
                        "description": "Puppy Not Found"
                    }
                }
            },
            "get": {
                "tags": [
                    "Puppies"
                ],
                "description": "Returns a single puppy",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Puppy's id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 2147483647
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A single puppy",
                        "schema": {
                            "$ref": "#/definitions/PuppyWithID"
                        }
                    },
                    "400": {
                        "description": "Puppy Not Found"
                    }
                }
            }
        },
        "/api/puppies/query": {
            "get": {
                "tags": [
                    "Puppies"
                ],
                "description": "get puppies with requirements",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Puppy's id",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 2147483647
                    },
                    {
                        "name": "breed_id",
                        "description": "Puppy breed's id",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 2147483647
                    },
                    {
                        "name": "trainer_id",
                        "description": "Puppy trainer's id",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 2147483647
                    },
                    {
                        "name": "age",
                        "description": "Puppy's age",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 2147483647
                    },
                    {
                        "name": "gender",
                        "description": "Puppy's gender",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "male",
                            "female"
                        ]
                    },
                    {
                        "name": "breed_name",
                        "description": "Puppy breed's name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "size",
                        "description": "Puppy's size",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "x-small",
                            "small",
                            "medium",
                            "large",
                            "x-large"
                        ]
                    },
                    {
                        "name": "type",
                        "description": "Puppy's type",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "hunting",
                            "sled",
                            "companion",
                            "pastoral",
                            "misc"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of puppies",
                        "schema": {
                            "$ref": "#/definitions/Puppy"
                        }
                    },
                    "400": {
                        "description": "Puppy Not Found"
                    }
                }
            }
        },
        "/api/trainers": {
            "get": {
                "tags": [
                    "Trainers"
                ],
                "description": "Returns all trainers",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "responses": {
                    "200": {
                        "description": "An array of trainers",
                        "schema": {
                            "$ref": "#/definitions/Trainer"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Trainers"
                ],
                "description": "Creates a new trainer",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Trainer",
                        "description": "Trainer object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Trainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created"
                    }
                }
            }
        },
        "/api/trainers/query": {
            "get": {
                "tags": [
                    "Trainers"
                ],
                "description": "get trainers with requirements",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Trainer's id",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 2147483647
                    },
                    {
                        "name": "name",
                        "description": "Trainer's name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "city",
                        "description": "Trainer's city",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ssn",
                        "description": "Trainer's SSN",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "pattern": "^[0-9]{3}-[0-9]{2}-[0-9]{4}$"
                    },
                    {
                        "name": "phone",
                        "description": "Trainer's phone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "pattern": "^([0-9]{3})-[0-9]{3}-[0-9]{4}$"
                    },
                    {
                        "name": "email",
                        "description": "Trainer's email",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "email"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of trainers",
                        "schema": {
                            "$ref": "#/definitions/Trainer"
                        }
                    },
                    "400": {
                        "description": "Trainer Not Found"
                    }
                }
            }
        },
        "/api/trainers/{id}": {
            "get": {
                "tags": [
                    "Trainers"
                ],
                "description": "Returns a single trainer",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Trainer's id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 2147483647
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A single trainer",
                        "schema": {
                            "$ref": "#/definitions/Trainer"
                        }
                    },
                    "400": {
                        "description": "Trainer Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Trainers"
                ],
                "description": "Deletes a single trainer",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Trainer's id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 2147483647
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted"
                    },
                    "400": {
                        "description": "Trainer Not Found"
                    }
                }
            }
        },
        "/api/trainers/{id}/puppies": {
            "get": {
                "tags": [
                    "Trainers"
                ],
                "description": "Returns all the puppies trained by a trainer",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Trainer's id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 2147483647
                    }
                ],
                "responses": {
                    "200": {
                        "description": "all the puppies trained by a trainer",
                        "schema": {
                            "$ref": "#/definitions/Trainer"
                        }
                    },
                    "404": {
                        "description": "Trainer OR Puppies Not Found"
                    }
                }
            }
        },
        "/api/breeds": {
            "get": {
                "tags": [
                    "Breeds"
                ],
                "description": "Returns all breeds",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "responses": {
                    "200": {
                        "description": "An array of breeds",
                        "schema": {
                            "$ref": "#/definitions/Breed"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Breeds"
                ],
                "description": "Creates a new breed",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Breed",
                        "description": "Breed object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Breed"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created"
                    }
                }
            }
        },
        "/api/breeds/query": {
            "get": {
                "tags": [
                    "Breeds"
                ],
                "description": "get breeds with requirements",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Breed's id",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 2147483647
                    },
                    {
                        "name": "breed_name",
                        "description": "Breed's name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "size",
                        "description": "Breed's size",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "x-small",
                            "small",
                            "medium",
                            "large",
                            "x-large"
                        ]
                    },
                    {
                        "name": "type",
                        "description": "Breed's type",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "hunting",
                            "sled",
                            "companion",
                            "pastoral",
                            "misc"
                        ]
                    },
                    {
                        "name": "description",
                        "description": "Breed's description",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of breeds",
                        "schema": {
                            "$ref": "#/definitions/Breed"
                        }
                    },
                    "400": {
                        "description": "Breed Not Found"
                    }
                }
            }
        },
        "/api/breeds/{id}": {
            "get": {
                "tags": [
                    "Breeds"
                ],
                "description": "Returns a single breed",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Breed's id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 2147483647
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A single breed",
                        "schema": {
                            "$ref": "#/definitions/Breed"
                        }
                    },
                    "400": {
                        "description": "Breed Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Breeds"
                ],
                "description": "Deletes a single breed",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Breed's id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 2147483647
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted"
                    },
                    "400": {
                        "description": "Breed Not Found"
                    }
                }
            }
        },
        "/api/reviews": {
            "post": {
                "tags": [
                    "Reviews"
                ],
                "description": "Creates a new review",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Review",
                        "description": "Review object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ReviewWithoutDate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created"
                    }
                }
            }
        },
        "/api/reviews/{id}": {
            "delete": {
                "tags": [
                    "Reviews"
                ],
                "description": "Deletes a single review",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Review's id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 2147483647
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted"
                    },
                    "400": {
                        "description": "Review Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Reviews"
                ],
                "description": "Updates a single review",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Review",
                        "description": "Review object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ReviewWithoutDate"
                        }
                    },
                    {
                        "name": "id",
                        "description": "Review's id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 2147483647
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated"
                    },
                    "400": {
                        "description": "Review Not Found"
                    }
                }
            }
        },
        "/api/reviews/query": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "description": "get reviews with requirements",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Review's id",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 2147483647
                    },
                    {
                        "name": "puppy_id",
                        "description": "Puppy's id",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 2147483647
                    },
                    {
                        "name": "author_name",
                        "description": "Review's author's name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "starting_rating",
                        "description": "The starting range of review's rating",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 10
                    },
                    {
                        "name": "ending_rating",
                        "description": "The ending range of review's rating",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 10
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of reviews",
                        "schema": {
                            "$ref": "#/definitions/Review"
                        }
                    },
                    "400": {
                        "description": "Review Not Found"
                    }
                }
            }
        },
        "/api/reviews/puppy/{puppy_id}": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "description": "Returns all reviews for a puppy",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "puppy_id",
                        "description": "Puppy's id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 2147483647
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All reviews for a puppy",
                        "schema": {
                            "$ref": "#/definitions/Review"
                        }
                    },
                    "400": {
                        "description": "Breed Not Found"
                    }
                }
            }
        },
        "/api/reviews/puppy/{puppy_id}/review/{review_id}": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "description": "Returns a particular review for particular puppy",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "puppy_id",
                        "description": "Puppy's id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 2147483647
                    },
                    {
                        "name": "review_id",
                        "description": "Review's id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 2147483647
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A particular review for particular puppy",
                        "schema": {
                            "$ref": "#/definitions/Review"
                        }
                    },
                    "404": {
                        "description": "Breed Not Found"
                    }
                }
            }
        }
    },
    "definitions": {
        "Puppy": {
            "type": "object",
            "properties": {
                "breed_id": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "maximum": 2147483647
                },
                "trainer_id": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "maximum": 2147483647
                },
                "age": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "maximum": 2147483647
                },
                "gender": {
                    "type": "string",
                    "enum": [
                        "male",
                        "female"
                    ]
                }
            }
        },
        "PuppyWithID": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "maximum": 2147483647
                },
                "breed_id": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "maximum": 2147483647
                },
                "trainer_id": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "maximum": 2147483647
                },
                "age": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "maximum": 2147483647
                },
                "gender": {
                    "type": "string",
                    "enum": [
                        "male",
                        "female"
                    ]
                }
            }
        },
        "ID": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "maximum": 2147483647
                }
            }
        },
        "Trainer": {
            "type": "object",
            "properties": {
                "ssn": {
                    "type": "string",
                    "pattern": "^[0-9]{3}-[0-9]{2}-[0-9]{4}$"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string",
                    "pattern": "^([0-9]{3})-[0-9]{3}-[0-9]{4}$"
                },
                "city": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "format": "email"
                }
            }
        },
        "Breed": {
            "type": "object",
            "properties": {
                "breed_name": {
                    "type": "string"
                },
                "size": {
                    "type": "string",
                    "enum": [
                        "x-small",
                        "small",
                        "medium",
                        "large",
                        "x-large"
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "hunting",
                        "sled",
                        "companion",
                        "pastoral",
                        "misc"
                    ]
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "Review": {
            "type": "object",
            "properties": {
                "puppy_id": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "maximum": 2147483647
                },
                "author_name": {
                    "type": "string"
                },
                "rating": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "maximum": 10
                },
                "review_text": {
                    "type": "string"
                },
                "date_created": {
                    "type": "string"
                },
                "date_update": {
                    "type": "string"
                }
            }
        },
        "ReviewWithoutDate": {
            "type": "object",
            "properties": {
                "puppy_id": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "maximum": 2147483647
                },
                "author_name": {
                    "type": "string"
                },
                "rating": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "maximum": 10
                },
                "review_text": {
                    "type": "string"
                }
            }
        }
    },
    "responses": {},
    "parameters": {},
    "securityDefinitions": {
        "API-Key": {
            "description": "Qualys Pet Store Authorization, apiKey: admin123456",
            "in": "header",
            "name": "Authorization",
            "type": "apiKey"
        }
    },
    "security": [
        {
            "API-Key": []
        }
    ],
    "tags": []
}