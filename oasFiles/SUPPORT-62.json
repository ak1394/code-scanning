{
    "info": {
        "title": "Node Swagger API",
        "version": "1.0.1",
        "description": "Demo API with vulnerabilities"
    },
    "schemes": [
        "http"
    ],
    "host": "127.0.0.1:4010",
    "basePath": "/",
    "swagger": "2.0",
    "paths": {
        "/api/puppies": {
            "get": {
                "tags": [
                    "Puppies"
                ],
                "description": "Returns all puppies",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "responses": {
                    "200": {
                        "description": "An array of puppies",
                        "schema": {
                            "$ref": "#/definitions/Puppy"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Puppies"
                ],
                "description": "Creates a new puppy",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "puppy",
                        "description": "Puppy object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Puppy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created"
                    }
                }
            },
            "put": {
                "tags": [
                    "Puppies"
                ],
                "description": "Updates a single puppy",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "PuppyWithID",
                        "description": "Puppy object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PuppyWithID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated"
                    },
                    "400": {
                        "description": "Puppy Not Found"
                    }
                }
            }
        },
        "/api/puppies/query": {
            "get": {
                "tags": [
                    "Puppies"
                ],
                "description": "get puppies with requirements",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Puppy's id",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "ownerSSN",
                        "description": "Puppy's ownerSSN",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "description": "Puppy's name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "color",
                        "description": "Puppy's color",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sex",
                        "description": "Puppy's sex",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of puppies",
                        "schema": {
                            "$ref": "#/definitions/Puppy"
                        }
                    },
                    "400": {
                        "description": "Puppy Not Found"
                    }
                }
            }
        },
        "/api/puppies/{id}": {
            "get": {
                "tags": [
                    "Puppies"
                ],
                "description": "Returns a single puppy",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Puppy's id",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A single puppy",
                        "schema": {
                            "$ref": "#/definitions/Puppy"
                        }
                    },
                    "400": {
                        "description": "Puppy Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Puppies"
                ],
                "description": "Deletes a single puppy",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Puppy's id",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted"
                    },
                    "400": {
                        "description": "Puppy Not Found"
                    }
                }
            }
        },
        "/api/puppies/{id}/name": {
            "patch": {
                "tags": [
                    "Puppies"
                ],
                "description": "Updates a single puppy",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Puppy's id",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "name",
                        "description": "Puppy's name",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated"
                    },
                    "400": {
                        "description": "Puppy Not Found"
                    }
                }
            }
        },
        "/api/owners": {
            "get": {
                "tags": [
                    "Owners"
                ],
                "description": "Returns all owners",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "responses": {
                    "200": {
                        "description": "An array of owners",
                        "schema": {
                            "$ref": "#/definitions/Owner"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Owners"
                ],
                "description": "Creates a new owner",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Owner",
                        "description": "Owner object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Owner"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created"
                    }
                }
            },
            "put": {
                "tags": [
                    "Owners"
                ],
                "description": "Updates a single owner",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Owner",
                        "description": "Owner object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Owner"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated"
                    },
                    "400": {
                        "description": "Owner Not Found"
                    }
                }
            }
        },
        "/api/owners/query": {
            "get": {
                "tags": [
                    "Owners"
                ],
                "description": "get owners with requirements",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "ssn",
                        "description": "Owner's ssn",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "description": "Owner's name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "age",
                        "description": "Owner's age",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "city",
                        "description": "Puppy's city",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "creditCard",
                        "description": "Puppy's creditCard",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of owners",
                        "schema": {
                            "$ref": "#/definitions/Owner"
                        }
                    },
                    "400": {
                        "description": "Owner Not Found"
                    }
                }
            }
        },
        "/api/owners/{ssn}": {
            "get": {
                "tags": [
                    "Owners"
                ],
                "description": "Returns a single owner",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "ssn",
                        "description": "Owner's ssn",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A single owner",
                        "schema": {
                            "$ref": "#/definitions/Owner"
                        }
                    },
                    "400": {
                        "description": "Owner Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Owners"
                ],
                "description": "Deletes a single owner",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "ssn",
                        "description": "Owner's ssn",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted"
                    },
                    "400": {
                        "description": "Owner Not Found"
                    }
                }
            }
        },
        "/api/owners/{ssn}/name": {
            "patch": {
                "tags": [
                    "Owners"
                ],
                "description": "Updates a single owner",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "ssn",
                        "description": "Owner's ssn",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "description": "Owner's name",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated"
                    },
                    "400": {
                        "description": "Owner Not Found"
                    }
                }
            }
        },
        "/api/doctors": {
            "get": {
                "tags": [
                    "Doctors"
                ],
                "description": "Returns all doctors",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "responses": {
                    "200": {
                        "description": "An array of doctors",
                        "schema": {
                            "$ref": "#/definitions/Doctor"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Doctors"
                ],
                "description": "Creates a new doctor",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Doctor",
                        "description": "Doctor object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Doctor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created"
                    }
                }
            },
            "put": {
                "tags": [
                    "Doctors"
                ],
                "description": "Updates a single doctor",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "Doctor",
                        "description": "Doctor object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Doctor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated"
                    },
                    "400": {
                        "description": "Doctor Not Found"
                    }
                }
            }
        },
        "/api/doctors/query": {
            "get": {
                "tags": [
                    "Doctors"
                ],
                "description": "get Doctors with requirements",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "registrationNumber",
                        "description": "Doctor's registrationNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "treatedPuppyId",
                        "description": "Doctor's treatedPuppyId",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "specialty",
                        "description": "Doctor's specialty",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "description": "Doctor's name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "contactNumber",
                        "description": "Doctor's contactNumber",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of doctors",
                        "schema": {
                            "$ref": "#/definitions/Doctor"
                        }
                    },
                    "400": {
                        "description": "Doctor Not Found"
                    }
                }
            }
        },
        "/api/doctors/{registrationNumber}": {
            "get": {
                "tags": [
                    "Doctors"
                ],
                "description": "Returns a single doctor",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "registrationNumber",
                        "description": "Doctor's registrationNumber",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A single doctor",
                        "schema": {
                            "$ref": "#/definitions/Doctor"
                        }
                    },
                    "400": {
                        "description": "Doctor Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Doctors"
                ],
                "description": "Deletes a single doctor",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "registrationNumber",
                        "description": "Doctor's registrationNumber",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted"
                    },
                    "400": {
                        "description": "Doctor Not Found"
                    }
                }
            }
        },
        "/api/doctors/{registrationNumber}/name": {
            "patch": {
                "tags": [
                    "Doctors"
                ],
                "description": "Updates a single doctor",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "registrationNumber",
                        "description": "Doctor's registrationNumber",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "name",
                        "description": "Doctor's name",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated"
                    },
                    "400": {
                        "description": "Doctor Not Found"
                    }
                }
            }
        }
    },
    "definitions": {
        "Puppy": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "ownerSSN": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "sex": {
                    "type": "string"
                }
            }
        },
        "PuppyWithID": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "ownerSSN": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "sex": {
                    "type": "string"
                }
            }
        },
        "ID": {
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "Owner": {
            "properties": {
                "ssn": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "age": {
                    "type": "integer"
                },
                "city": {
                    "type": "string"
                },
                "creditCard": {
                    "type": "string"
                }
            }
        },
        "Doctor": {
            "properties": {
                "registrationNumber": {
                    "type": "integer"
                },
                "treatedPuppyId": {
                    "type": "integer"
                },
                "specialty": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "contactNumber": {
                    "type": "string"
                }
            }
        }
    },
    "responses": {},
    "parameters": {},
    "securityDefinitions": {},
    "tags": []
}