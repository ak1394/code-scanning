{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Yet Another Node.js Blogg Application API",
        "description": "Yet Another Node.js Blogg Application API",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "host": "127.0.0.1:4010",
    "basePath": "/",
    "tags": [
        {
            "name": "Roles",
            "description": "API for Roles in the system"
        },
        {
            "name": "Class",
            "description": "API for class in the system"
        },
        {
            "name": "Students",
            "description": "API for students in the system"
        },
        {
            "name": "Teachers",
            "description": "API for Teachers in the system"
        }
    ],
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/role": {
            "post": {
                "tags": [
                    "Roles"
                ],
                "description": "Create new role in system",
                "parameters": [
                    {
                        "name": "Role_Name",
                        "in": "body",
                        "description": "User that we want to create",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "New user is created",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get all roles in system",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/class": {
            "post": {
                "tags": [
                    "Class"
                ],
                "description": "Create new class in system",
                "parameters": [
                    {
                        "name": "Class",
                        "in": "body",
                        "description": "Class that we want to create",
                        "schema": {
                            "$ref": "#/definitions/Class"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "New user is created",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Class"
                ],
                "summary": "Get all classes in system",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/students": {
            "post": {
                "tags": [
                    "Students"
                ],
                "description": "Create new user in system",
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "description": "User that we want to create",
                        "schema": {
                            "$ref": "#/definitions/Student"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "New user is created",
                        "schema": {
                            "$ref": "#/definitions/Student"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Students"
                ],
                "summary": "Get all students in system",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Student"
                        }
                    }
                }
            }
        },
        "/students/{Student_Id}": {
            "parameters": [
                {
                    "name": "Student_Id",
                    "in": "path",
                    "required": true,
                    "description": "ID of student that we want to find",
                    "type": "integer"
                }
            ],
            "get": {
                "tags": [
                    "Students"
                ],
                "summary": "Get student with given ID",
                "responses": {
                    "200": {
                        "description": "Student is found",
                        "schema": {
                            "$ref": "#/definitions/Student"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete student with given ID",
                "tags": [
                    "Students"
                ],
                "responses": {
                    "200": {
                        "description": "Student is deleted",
                        "schema": {
                            "$ref": "#/definitions/Student"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update student with give ID",
                "tags": [
                    "Students"
                ],
                "parameters": [
                    {
                        "name": "student",
                        "in": "body",
                        "description": "Student with new values of properties",
                        "schema": {
                            "$ref": "#/definitions/Student"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Student is updated",
                        "schema": {
                            "$ref": "#/definitions/Student"
                        }
                    }
                }
            }
        },
        "/teachers": {
            "post": {
                "tags": [
                    "Teachers"
                ],
                "description": "Create new teacher in system",
                "parameters": [
                    {
                        "name": "teacher",
                        "in": "body",
                        "description": "Teacher that we want to create",
                        "schema": {
                            "$ref": "#/definitions/Teacher"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "New teacher is created",
                        "schema": {
                            "$ref": "#/definitions/Teacher"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Teachers"
                ],
                "summary": "Get all teachers in system",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Teacher"
                        }
                    }
                }
            }
        },
        "/teachers/{Teacher_Id}": {
            "parameters": [
                {
                    "name": "Teacher_Id",
                    "in": "path",
                    "required": true,
                    "description": "ID of teacher that we want to find",
                    "type": "integer"
                }
            ],
            "get": {
                "tags": [
                    "Teachers"
                ],
                "summary": "Get teacher with given ID",
                "responses": {
                    "200": {
                        "description": "Teacher is found",
                        "schema": {
                            "$ref": "#/definitions/Teacher"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete teacher with given ID",
                "tags": [
                    "Teachers"
                ],
                "responses": {
                    "200": {
                        "description": "Teacher is deleted",
                        "schema": {
                            "$ref": "#/definitions/Teacher"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update teacher with give ID",
                "tags": [
                    "Teachers"
                ],
                "parameters": [
                    {
                        "name": "teacher",
                        "in": "body",
                        "description": "Teacher with new values of properties",
                        "schema": {
                            "$ref": "#/definitions/Teacher"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Teacher is updated",
                        "schema": {
                            "$ref": "#/definitions/Teacher"
                        }
                    }
                }
            }
        },
        "/role/{Role_Id}": {
            "parameters": [
                {
                    "name": "Role_Id",
                    "in": "path",
                    "required": true,
                    "description": "ID of role that we want to find",
                    "type": "integer"
                }
            ],
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Get role with given ID",
                "responses": {
                    "200": {
                        "description": "Role is found",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete role with given ID",
                "tags": [
                    "Role"
                ],
                "responses": {
                    "200": {
                        "description": "Role is deleted",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                }
            }
        },
        "/class/{Class_Id}": {
            "parameters": [
                {
                    "name": "Class_Id",
                    "in": "path",
                    "required": true,
                    "description": "ID of class that we want to find",
                    "type": "integer"
                }
            ],
            "get": {
                "tags": [
                    "GetClassById"
                ],
                "summary": "Get class with given ID",
                "responses": {
                    "200": {
                        "description": "Class is found",
                        "schema": {
                            "$ref": "#/definitions/Class"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete class with given ID",
                "tags": [
                    "DeleteClassById"
                ],
                "responses": {
                    "200": {
                        "description": "Class is deleted",
                        "schema": {
                            "$ref": "#/definitions/Class"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Student": {
            "required": [
                "Student_Email"
            ],
            "properties": {
                "Student_Id": {
                    "type": "integer",
                    "uniqueItems": true
                },
                "Student_Name": {
                    "type": "string"
                },
                "Parents_Name": {
                    "type": "string"
                },
                "Emergency_Ph_No": {
                    "type": "string"
                },
                "Student_Email": {
                    "type": "string",
                    "uniqueItems": true
                },
                "Role_Id": {
                    "type": "integer"
                },
                "Class_Id": {
                    "type": "integer"
                }
            }
        },
        "Students": {
            "$ref": "#/definitions/Student"
        },
        "Teacher": {
            "required": [
                "Teacher_Email"
            ],
            "properties": {
                "Teacher_Id": {
                    "type": "integer",
                    "uniqueItems": true
                },
                "Teacher_Name": {
                    "type": "string"
                },
                "Teacher_Email": {
                    "type": "string",
                    "uniqueItems": true
                },
                "Teacher_Qualification": {
                    "type": "string"
                },
                "Teacher_phoneNo": {
                    "type": "string"
                },
                "Role_Id": {
                    "type": "integer"
                }
            }
        },
        "Teachers": {
            "$ref": "#/definitions/Teacher"
        },
        "Role": {
            "properties": {
                "Role_Id": {
                    "type": "integer"
                },
                "Role_Name": {
                    "type": "string"
                }
            }
        },
        "Roles": {
            "$ref": "#/definitions/Role"
        },
        "Class": {
            "required": [
                "Class_Name"
            ],
            "properties": {
                "Class_Id": {
                    "type": "integer",
                    "uniqueItems": true
                },
                "Class_Name": {
                    "type": "string"
                },
                "Teacher_Email": {
                    "type": "string",
                    "uniqueItems": true
                }
            }
        },
        "Classes": {
            "$ref": "#/definitions/Class"
        }
    }
}