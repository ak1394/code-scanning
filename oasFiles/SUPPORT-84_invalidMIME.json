{
    "info": {
        "title": "eCellar API v1",
        "version": "1.0.0",
        "description": {
            "TODO": "WRITE ME"
        }
    },
    "host": "10.11.68.56:5000",
    "basePath": "/eCellar",
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json",
        "int"
    ],
    "produces": [
        "application/json"
    ],
    "security": [
        {
            "ApiKeyHeader": []
        },
        {
            "SessionKeyHeader": []
        }
    ],
    "swagger": "2.0",
    "paths": {
        "/core/states": {
            "get": {
                "summary": "Get US States and Canadian Provinces",
                "description": "Get an array of US states and Canadian provinces. Sorted by country (US, then Canada), then alpha by state/province name.\n",
                "tags": [
                    "Core"
                ],
                "x-route-name": "states-provinces-get",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "expireAfter": 31536000
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "required": [
                                    "state_code",
                                    "state_name",
                                    "country_code",
                                    "country_name"
                                ],
                                "properties": {
                                    "state_code": {
                                        "type": "string",
                                        "maxLength": 2,
                                        "example": "CA",
                                        "description": "This is a 2-letter StateCode."
                                    },
                                    "state_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "California"
                                    },
                                    "country_code": {
                                        "type": "string",
                                        "maxLength": 2,
                                        "example": "US",
                                        "description": "This is a 2-letter CountryCode."
                                    },
                                    "country_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "United States"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/core/countries": {
            "get": {
                "summary": "Get Countries",
                "description": "Get an array of countries, sorted with United States first, then all others alpha by country name.\n",
                "tags": [
                    "Core"
                ],
                "x-route-name": "countries-get",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "expireAfter": 31536000
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "required": [
                                    "country_code",
                                    "country_name"
                                ],
                                "properties": {
                                    "country_code": {
                                        "type": "string",
                                        "maxLength": 2,
                                        "example": "US",
                                        "description": "This is a 2-letter CountryCode."
                                    },
                                    "country_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "United States"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/core/loadspa": {
            "post": {
                "summary": "Get SPA Load Details",
                "description": "Used by MLINK SPA loader script to get load URLs for appropriate SPA build\n",
                "tags": [
                    "Core"
                ],
                "x-route-name": "spa-build-get",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "expireAfter": 3600
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "load_parameters",
                        "description": "Parameters for fetching SPA load URLs",
                        "schema": {
                            "$ref": "#/definitions/SPARequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SPADetails"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/client": {
            "get": {
                "summary": "Get Client",
                "description": "Get data about the MLINK client who has authorized your API Key.\n",
                "tags": [
                    "Client"
                ],
                "x-route-name": "client-get",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "expireAfter": 43200
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Client"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/client/customertags": {
            "get": {
                "summary": "Get Client Customer Tags",
                "description": "Get an array of the client^s customer tags sorted by tag group display order, then tag display_order.\n",
                "tags": [
                    "Client"
                ],
                "x-route-name": "client-customer-tags-get",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "expireAfter": 43200
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ClientCustomerTag"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/client/pickuplocations": {
            "get": {
                "summary": "Get Client Pickup Locations",
                "description": "Gets an array of client locations available for picking up purchases, sorted alpha by location name.\n",
                "tags": [
                    "Client"
                ],
                "x-route-name": "client-pickup-locations-get",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "expireAfter": 3600,
                    "requireLogin": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ClientLocation"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/client/pickuplocations/{location_id}": {
            "parameters": [
                {
                    "in": "path",
                    "name": "location_id",
                    "required": true,
                    "type": "string",
                    "maxLength": 36
                }
            ],
            "get": {
                "summary": "Gets one Client Pickup Location",
                "description": "Gets one client location available for picking up purchases.",
                "tags": [
                    "Client"
                ],
                "x-route-name": "client-pickup-locations-get-one",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "expireAfter": 3600
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ClientLocation"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/client/shipping/states": {
            "get": {
                "summary": "Get Ship-To States",
                "description": "Get an array of US states and Canadian provinces that the client can ship to. Sorted by country (US, then Canada), then alpha by state/province name.\n",
                "tags": [
                    "Client"
                ],
                "x-route-name": "client-ship-states-get",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "expireAfter": 3600
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "required": [
                                    "state_code",
                                    "state_name",
                                    "country_code",
                                    "country_name"
                                ],
                                "properties": {
                                    "state_code": {
                                        "type": "string",
                                        "maxLength": 2,
                                        "example": "CA",
                                        "description": "This is a 2-letter StateCode."
                                    },
                                    "state_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "California"
                                    },
                                    "country_code": {
                                        "type": "string",
                                        "maxLength": 2,
                                        "example": "US",
                                        "description": "This is a 2-letter CountryCode."
                                    },
                                    "country_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "United States"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/products/categories": {
            "get": {
                "summary": "Get All Categories",
                "description": "Get an array of categories with parent/child mappings, grouped by parent_category_id, then sorted by display_order, then alpha by category_name.\n\nNote: The display_order property is controlled by the client.\n",
                "tags": [
                    "Products"
                ],
                "x-route-name": "products-get-categories",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "expireAfter": 3600,
                    "requireLogin": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductCategory"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/products/categories/{slug}": {
            "get": {
                "summary": "Get Category",
                "description": "Gets top-level details for a product category.",
                "tags": [
                    "Products"
                ],
                "x-route-name": "products-get-category",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "expireAfter": 3600,
                    "requireLogin": true
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "required": true,
                        "type": "string",
                        "description": "The slug for the category."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ProductCategory"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/products/categories/{slug}/subcategories": {
            "get": {
                "summary": "Get Sub-Categories",
                "description": "Get an array of all categories below a category, grouped by parent_category_id, then sorted by display_order, then alpha by category_name.\n\nNote: The display_order property is controlled by the client.\n",
                "tags": [
                    "Products"
                ],
                "x-route-name": "products-get-subcategories",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "expireAfter": 3600,
                    "requireLogin": true
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "required": true,
                        "type": "string",
                        "description": "The slug for the category."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductCategory"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/products/categories/{slug}/products": {
            "get": {
                "summary": "Get Products in Category",
                "description": "Get an array of products in a category, sorted by display_order, then alpha by product_name.\n\nNote: The display_order property is controlled by the client.\n",
                "tags": [
                    "Products"
                ],
                "x-route-name": "products-get-category-products",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "expireAfter": 3600,
                    "requireLogin": true
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "required": true,
                        "type": "string",
                        "description": "The slug for the category."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Product"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/products": {
            "get": {
                "summary": "Get All Products",
                "description": "Get an array of all products, sorted by display_order, then alpha by product_name.\n\nNote: The display_order property is controlled by the client.\n\nTODO: take customer type into consideration, if logged in.\n",
                "tags": [
                    "Products"
                ],
                "x-route-name": "products-get",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "expireAfter": 3600,
                    "requireLogin": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Product"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/products/{slug}": {
            "get": {
                "summary": "Get One Product",
                "description": "Get information for a single product.\n",
                "tags": [
                    "Products"
                ],
                "x-route-name": "products-get-one",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "expireAfter": 3600,
                    "requireLogin": true
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "required": true,
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255,
                        "description": "Slug for the product"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/club/tiers": {
            "get": {
                "summary": "Get Club Tiers",
                "description": "Get an array of club tiers sorted by display_order, then alpha by public tier name.\n\nNote: clients have public and private tier names, which may differ.\n",
                "tags": [
                    "Club"
                ],
                "x-route-name": "club-tiers-get",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "expireAfter": 3600
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ClubTier"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/club/tiers/{club_tier_id}": {
            "parameters": [
                {
                    "in": "path",
                    "name": "club_tier_id",
                    "required": true,
                    "type": "integer",
                    "minimum": 1
                }
            ],
            "get": {
                "summary": "Get One Club Tier",
                "description": "Gets one club tier",
                "tags": [
                    "Club"
                ],
                "x-route-name": "club-tiers-get-one",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "expireAfter": 3600
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ClubTier"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/cart": {
            "get": {
                "summary": "Get Cart",
                "description": "Gets the cart and all products in the cart\n",
                "tags": [
                    "Cart"
                ],
                "x-route-name": "cart-get",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "expireAfter": 3600,
                    "requireLogin": true,
                    "expiredBy": [
                        "delete_cart_products__product_id_",
                        "patch_cart_product",
                        "patch_cart_products",
                        "put_checkout"
                    ]
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Cart"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/cart/product": {
            "patch": {
                "summary": "Set Product",
                "description": "Add a product to the cart.\n\nIf the product_id is not in the cart, it will be added, otherwise it will be updated by adding the new quantity to the existing quantity.\n",
                "tags": [
                    "Cart"
                ],
                "x-route-name": "cart-item-put",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "noCache": true
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "cart_item",
                        "schema": {
                            "required": [
                                "product_id",
                                "quantity"
                            ],
                            "properties": {
                                "product_id": {
                                    "type": "integer",
                                    "minimum": 1
                                },
                                "quantity": {
                                    "type": "integer",
                                    "example": 2
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/cart/products": {
            "patch": {
                "summary": "Update cart products",
                "description": "Update the quantity for multiple products in a cart. If quantity is set to 0 it is removed from the cart.\n",
                "tags": [
                    "Cart"
                ],
                "x-route-name": "cart-items-patch",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "noCache": true
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "cart_patch_items",
                        "schema": {
                            "required": [
                                "cart_items"
                            ],
                            "properties": {
                                "cart_items": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "product_id": {
                                                "type": "integer",
                                                "minimum": 1,
                                                "example": 1
                                            },
                                            "quantity": {
                                                "type": "integer",
                                                "minimum": 0,
                                                "example": 1
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/cart/products/{product_id}": {
            "parameters": [
                {
                    "in": "path",
                    "name": "product_id",
                    "required": true,
                    "type": "integer",
                    "minimum": 1
                }
            ],
            "delete": {
                "summary": "Delete Product",
                "description": "Delete a product from the cart.",
                "tags": [
                    "Cart"
                ],
                "x-route-name": "cart-item-delete",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "noCache": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/checkout": {
            "put": {
                "summary": "Put Checkout",
                "description": "Create a new order using data that a customer selected\n",
                "tags": [
                    "Checkout"
                ],
                "x-route-name": "checkout-put",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "noCache": true
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "checkout_parameters",
                        "description": "Parameters a customer selected for creating a new order",
                        "schema": {
                            "required": [
                                "payment_method_id"
                            ],
                            "properties": {
                                "comments": {
                                    "type": "string",
                                    "example": "Long text"
                                },
                                "coupon_code": {
                                    "type": "string",
                                    "maxLength": 50,
                                    "example": "SPRINGSAVINGS"
                                },
                                "gift_message": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "example": "Happy Birthday!"
                                },
                                "payment_method_id": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "example": 1
                                },
                                "pickup_date": {
                                    "type": "string",
                                    "format": "date",
                                    "example": "2018-08-01T00:00:00.000Z"
                                },
                                "pickup_location_id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "maxLength": 36,
                                    "example": "<UUID>"
                                },
                                "ship_date": {
                                    "type": "string",
                                    "format": "date",
                                    "example": "2018-08-01T00:00:00.000Z"
                                },
                                "ship_method_id": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "example": 1
                                },
                                "shipping_address_id": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "example": 1
                                },
                                "shipping_comments": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "example": "Please knock loudly!"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/checkout/preview": {
            "post": {
                "summary": "Get Checkout Preview",
                "description": "Get data for review before creating a new order.\n",
                "tags": [
                    "Checkout"
                ],
                "x-route-name": "checkout-put-precheck",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "noCache": true,
                    "requireLogin": true,
                    "expiredBy": [
                        "delete_customer_addresses_shipping__address_id_",
                        "delete_customer_paymentmethods__payment_method_id_",
                        "delete_customer_paymentmethods__payment_method_id_",
                        "patch_customer",
                        "patch_customer_addresses_billing",
                        "patch_customer_addresses_shipping",
                        "patch_customer_addresses_shipping__address_id_",
                        "post_customer_paymentmethods",
                        "put_customer_addresses_billing",
                        "put_customer_addresses_shipping"
                    ]
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "checkout_preview_parameters",
                        "description": "Parameters a customer selected for previewing a new order",
                        "schema": {
                            "required": [
                                "payment_method_id"
                            ],
                            "properties": {
                                "comments": {
                                    "type": "string",
                                    "example": "<TEXT>",
                                    "x-db-datatype": "VarChar"
                                },
                                "coupon_code": {
                                    "type": "string",
                                    "maxLength": 50,
                                    "example": "SPRINGSAVINGS"
                                },
                                "gift_message": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "example": "Happy Birthday!",
                                    "x-db-datatype": "NVarChar"
                                },
                                "payment_method_id": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "example": 1
                                },
                                "pickup_date": {
                                    "type": "string",
                                    "format": "date",
                                    "example": "2018-08-01T00:00:00.000Z",
                                    "x-db-datatype": "Date"
                                },
                                "pickup_location_id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "maxLength": 36,
                                    "example": "<UUID>"
                                },
                                "shipping_address_id": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "example": 1
                                },
                                "ship_date": {
                                    "type": "string",
                                    "format": "date",
                                    "example": "2018-08-01T00:00:00.000Z",
                                    "x-db-datatype": "Date"
                                },
                                "ship_method_id": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "example": 123456,
                                    "x-db-datatype": "Int"
                                },
                                "shipping_comments": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "example": "Please knock loudly!"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CheckoutPreview"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/signup": {
            "put": {
                "summary": "Create Customer",
                "description": "Create a new customer record for the client.\n",
                "tags": [
                    "Signup"
                ],
                "x-route-name": "customer-put-simple",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "noCache": true,
                    "authenticatingAPI": true
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "new_customer",
                        "description": "New customer data",
                        "schema": {
                            "$ref": "#/definitions/CustomerNew"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/signup/mailinglist": {
            "put": {
                "summary": "Join Mailing List",
                "description": "Create a new customer record for the client and add them to the mailing list.\n",
                "tags": [
                    "Signup"
                ],
                "x-route-name": "customer-put-mailinglist",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "noCache": true,
                    "authenticatingAPI": true
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "new_signup_mailinglist",
                        "description": "Data for new mailing list signup.",
                        "schema": {
                            "$ref": "#/definitions/CustomerNewMailingList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/signup/subscription": {
            "put": {
                "summary": "Signup For Club Subscription",
                "description": "Create a new customer and club subscription.\n",
                "tags": [
                    "Signup"
                ],
                "x-route-name": "customer-put-club-subscription",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "noCache": true,
                    "authenticatingAPI": true
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "new_signup_club_subscription",
                        "description": "Data for new club subscription signup.",
                        "schema": {
                            "$ref": "#/definitions/CustomerNewClubSubscription"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/signup/subscription/paymentmethod": {
            "put": {
                "summary": "Initiate Payform For Club Subscription",
                "description": "Create a new transaction.\n",
                "tags": [
                    "Signup"
                ],
                "x-route-name": "club-join-payform-put",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "noCache": true
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "new_payform_club_subscription",
                        "description": "Data for new club subscription payform.",
                        "schema": {
                            "$ref": "#/definitions/CustomerNewPayform"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PayformLaunch"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "patch": {
                "summary": "Validate Payform For Club Subscription",
                "description": "Validates results of payform.\n",
                "tags": [
                    "Signup"
                ],
                "x-route-name": "club-join-payform-patch",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "noCache": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ClubPayformStatus"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/customer": {
            "get": {
                "summary": "Get Customer",
                "description": "Get detailed information about the currently logged-in customer.\n",
                "tags": [
                    "Customer"
                ],
                "x-route-name": "customer-get",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "expireAfter": 3600,
                    "requireLogin": true,
                    "expiredBy": [
                        "delete_customer_addresses_shipping__address_id_",
                        "delete_customer_paymentmethods__payment_method_id_",
                        "patch_customer",
                        "patch_customer_addresses_billing",
                        "patch_customer_addresses_shipping",
                        "patch_customer_addresses_shipping__address_id_",
                        "patch_customer_addresses_shipping__address_id_",
                        "post_customer_paymentmethods",
                        "put_customer_addresses_billing",
                        "put_customer_addresses_shipping"
                    ]
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update Customer",
                "description": "Update information about the currently logged-in customer.\n",
                "tags": [
                    "Customer"
                ],
                "x-route-name": "customer-update",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "noCache": true
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "customer_simple",
                        "description": "Basic customer data.",
                        "schema": {
                            "$ref": "#/definitions/CustomerUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/customer/account": {
            "get": {
                "summary": "Get Customer Account Overview",
                "description": "Get customer data relevant for deciding what links to show a customer in the Account home page.\n",
                "tags": [
                    "Customer"
                ],
                "x-route-name": "customer-vitals-get",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "expireAfter": 3600,
                    "requireLogin": true,
                    "expiredBy": [
                        "delete_customer_addresses_shipping__address_id_",
                        "delete_customer_paymentmethods__payment_method_id_",
                        "patch_customer",
                        "post_customer_paymentmethods",
                        "put_customer_addresses_billing",
                        "put_customer_addresses_shipping",
                        "put_customer_subscriptions"
                    ]
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "required": [
                                "first_name",
                                "last_name",
                                "allocation_event_id",
                                "allocation_event_end_date",
                                "has_club_remixes",
                                "has_subscriptions",
                                "has_reservations",
                                "has_upcoming_reservations",
                                "has_billing_address",
                                "has_shipping_addresses",
                                "has_payment_methods",
                                "has_orders"
                            ],
                            "properties": {
                                "first_name": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "example": "John"
                                },
                                "last_name": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "example": "Smith"
                                },
                                "allocation_event_id": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "example": 1
                                },
                                "allocation_event_end_date": {
                                    "type": "string",
                                    "format": "date",
                                    "example": "1970-01-31T00:00:00.000Z"
                                },
                                "has_club_remixes": {
                                    "type": "boolean",
                                    "example": false
                                },
                                "has_subscriptions": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "has_reservations": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "has_upcoming_reservations": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "has_billing_address": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "has_shipping_addresses": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "has_payment_methods": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "has_orders": {
                                    "type": "boolean",
                                    "example": true
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/customer/addresses/billing": {
            "put": {
                "summary": "Create Billing Address",
                "description": "Create a new billing address for the currently logged-in customer.\n",
                "tags": [
                    "Customer / Addresses"
                ],
                "x-route-name": "customer-addresses-billing-put",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "noCache": true
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "billing_address",
                        "description": "Address data",
                        "schema": {
                            "$ref": "#/definitions/Address"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get Billing Address",
                "description": "Get the currently logged-in customer^s billing address, if any.\n",
                "tags": [
                    "Customer / Addresses"
                ],
                "x-route-name": "customer-addresses-billing-get",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "expireAfter": 3600,
                    "requireLogin": true,
                    "expiredBy": [
                        "put_customer_addresses_billing",
                        "patch_customer_addresses_billing"
                    ]
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Address"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update Billing Address",
                "description": "Update the currently logged-in customer^s billing address.\n",
                "tags": [
                    "Customer / Addresses"
                ],
                "x-route-name": "customer-addresses-billing-update",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "noCache": true
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "billing_address",
                        "description": "Address data.",
                        "schema": {
                            "$ref": "#/definitions/Address"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/customer/addresses/shipping": {
            "put": {
                "summary": "Create Shipping Address",
                "description": "Create a new shipping address for the currently logged-in customer.\n",
                "tags": [
                    "Customer / Addresses"
                ],
                "x-route-name": "customer-addresses-shipping-put",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "noCache": true
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "shipping_address",
                        "description": "Shipping Address data",
                        "schema": {
                            "$ref": "#/definitions/ShippingAddress"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get Shipping Addresses",
                "description": "Get an array of the currently logged-in customer^s shipping addresses, sorted by most-recently added first.\n",
                "tags": [
                    "Customer / Addresses"
                ],
                "x-route-name": "customer-addresses-shipping-get",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "expireAfter": 3600,
                    "requireLogin": true,
                    "expiredBy": [
                        "put_customer_addresses_shipping",
                        "delete_customer_addresses_shipping__address_id_",
                        "patch_customer_addresses_shipping",
                        "patch_customer_addresses_shipping__address_id_"
                    ]
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ShippingAddress"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "patch": {
                "summary": "Switch default address",
                "description": "Switch the currently logged-in customer^s default shipping address to one of their other shipping addresses.\n\nNote: this may be required before attempting to delete a customer^s shipping address. See the `Delete Shipping Address` operation.\n",
                "tags": [
                    "Customer / Addresses"
                ],
                "x-route-name": "customer-addresses-shipping-set-default",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "noCache": true
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "customer_switch_shipping_default",
                        "description": "Address ID to switch to.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "address_id"
                            ],
                            "properties": {
                                "address_id": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "example": 40
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/customer/addresses/shipping/{address_id}": {
            "parameters": [
                {
                    "in": "path",
                    "name": "address_id",
                    "required": true,
                    "type": "integer",
                    "minimum": 1,
                    "description": "The ID of the shipping address to use"
                }
            ],
            "get": {
                "summary": "Get Shipping Address",
                "description": "Get a shipping address belonging to the currently logged-in customer.\n",
                "tags": [
                    "Customer / Addresses"
                ],
                "x-route-name": "customer-addresses-shipping-get-one",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "expireAfter": 3600,
                    "requireLogin": true,
                    "expiredBy": [
                        "delete_customer_addresses_shipping__addresse_id_",
                        "patch_customer_addresses_shipping",
                        "patch_customer_addresses_shipping__address_id_"
                    ]
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ShippingAddress"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update Shipping Address",
                "description": "Update a shipping address belonging to the currently logged-in customer.\n",
                "tags": [
                    "Customer / Addresses"
                ],
                "x-route-name": "customer-addresses-shipping-update",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "noCache": true
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "shipping_address",
                        "description": "Address data.",
                        "schema": {
                            "$ref": "#/definitions/ShippingAddressPatch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Shipping Address",
                "description": "Delete a shipping address belonging to the currently logged-in customer.\n\nNote: a shipping addresses that is flagged as the customer^s default shipping address or is tied to any of their club subscriptions may not be deleted (and will return an error code).\n",
                "tags": [
                    "Customer / Addresses"
                ],
                "x-route-name": "customer-addresses-shipping-delete",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "noCache": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/customer/allocation": {
            "get": {
                "summary": "Get Allocation Event (IP)",
                "description": "Get information about the currently logged-in customer^s active allocation, if any.\n\nDoes not return the allocation event^s products.\n\nNote: An active allocation is determined internally and a customer will have one or none at any given time.\n",
                "tags": [
                    "Customer / Allocation"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "required": [
                                "event_id",
                                "start_date",
                                "end_date"
                            ],
                            "properties": {
                                "event_id": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "example": 123
                                },
                                "start_date": {
                                    "type": "string",
                                    "format": "date",
                                    "example": "2017-11-01T00:00:00.000Z"
                                },
                                "end_date": {
                                    "type": "string",
                                    "format": "date",
                                    "example": "2017-11-30T00:00:00.000Z"
                                },
                                "event_description": {
                                    "type": "string",
                                    "format": "html",
                                    "maxLength": 3064,
                                    "example": "<HTML>"
                                },
                                "minimum_order_quantity": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "example": 12
                                },
                                "allow_wish_requests": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "allow_repeat_wish_requests": {
                                    "type": "boolean",
                                    "example": false
                                },
                                "shipping_start_date": {
                                    "type": "string",
                                    "format": "date",
                                    "example": "2017-12-15T00:00:00.000Z"
                                },
                                "shipping_date_choices": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2017-12-15T00:00:00.000Z"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/customer/allocation/products": {
            "get": {
                "summary": "Get Allocated Products (IP)",
                "description": "Get an array of products for the currently logged-in customer^s active allocation, if any.\n\nNote: an `active` allocation is determined internally and a customer will have one or none at any given time.\n",
                "tags": [
                    "Customer / Allocation"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "required": [
                                "minimum_quantity",
                                "maximum_quantity",
                                "quantity_increment"
                            ],
                            "properties": {
                                "minimum_quantity": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "example": 1
                                },
                                "maximum_quantity": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "example": 1
                                },
                                "quantity_increment": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "example": 1
                                },
                                "maximum_wish_quantity": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "example": 1
                                },
                                "products": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Product"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/customer/login/check": {
            "post": {
                "summary": "Check Availability",
                "description": "Check to see if there is an account for an email address\n",
                "tags": [
                    "Customer / Login"
                ],
                "x-route-name": "customer-authentication-user-check",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "noCache": true
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "username",
                        "schema": {
                            "required": [
                                "username"
                            ],
                            "properties": {
                                "username": {
                                    "type": "string",
                                    "maxLength": 254,
                                    "example": "bob@smith.com"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "required": [
                                "user_exists"
                            ],
                            "properties": {
                                "user_exists": {
                                    "type": "boolean",
                                    "example": true,
                                    "description": "If true, the username exists already"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/customer/login": {
            "get": {
                "summary": "Log In State Check [E]",
                "description": "Attempt to check login state.\n",
                "tags": [
                    "Customer / Login"
                ],
                "x-route-name": "customer-login-check",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "expireAfter": 600,
                    "requireLogin": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "user_is_authenticated": {
                                    "type": "boolean",
                                    "description": "Customer has authenticated using username and password.",
                                    "example": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Not OK"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Log In [E]",
                "description": "Attempt to authenticate a customer using a username/password combination.\n",
                "tags": [
                    "Customer / Login"
                ],
                "x-route-name": "customer-login-post",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "noCache": true,
                    "authenticatingAPI": true
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "credentials",
                        "description": "Customer credentials",
                        "schema": {
                            "required": [
                                "username",
                                "password"
                            ],
                            "properties": {
                                "username": {
                                    "type": "string",
                                    "maxLength": 254,
                                    "example": "bob@smith.com"
                                },
                                "password": {
                                    "type": "string",
                                    "format": "password",
                                    "example": "<Password>"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Not OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "invalid_credentials": {
                                    "type": "boolean",
                                    "description": "Customer not found using username and password.",
                                    "example": true
                                },
                                "user_is_locked": {
                                    "type": "boolean",
                                    "description": "Customer has been locked out.",
                                    "example": true
                                },
                                "user_is_disabled": {
                                    "type": "boolean",
                                    "description": "Customer has been disabled by client.",
                                    "example": true
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Log Out",
                "description": "Log current customer out.\n\nNote: this may affect the customer^s current cart: items that are allocation-only or are part of a club remix will be removed.\n",
                "x-route-name": "customer-login-delete",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "noCache": true,
                    "unauthenticatingAPI": true
                },
                "tags": [
                    "Customer / Login"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "patch": {
                "summary": "Change Password [E]",
                "description": "Use a username and password to change a customer^s password.\n",
                "tags": [
                    "Customer / Login"
                ],
                "x-route-name": "customer-login-patch",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "noCache": true
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "credential_update",
                        "schema": {
                            "required": [
                                "username",
                                "password",
                                "new_password"
                            ],
                            "properties": {
                                "username": {
                                    "type": "string",
                                    "maxLength": 254,
                                    "example": "bob@smith.com"
                                },
                                "password": {
                                    "type": "string",
                                    "format": "password",
                                    "example": "<Password>"
                                },
                                "new_password": {
                                    "type": "string",
                                    "format": "password",
                                    "minLength": 8,
                                    "example": "<Password>"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Not OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "invalid_credentials": {
                                    "type": "boolean",
                                    "description": "Customer not found using username and password.",
                                    "example": true
                                },
                                "user_is_locked": {
                                    "type": "boolean",
                                    "description": "Customer has been locked out.",
                                    "example": true
                                },
                                "user_is_disabled": {
                                    "type": "boolean",
                                    "description": "Customer has been disabled by client.",
                                    "example": true
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/customer/login/forgot": {
            "post": {
                "summary": "Email Reset Token (IP) [E]",
                "description": "Send an email with a link for resetting a customer^s password.\n\nNote: tokens have an expiration date. The email includes information about that.\n",
                "x-route-name": "customer-password-token-send",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "noCache": true
                },
                "tags": [
                    "Customer / Login"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "username",
                        "description": "username",
                        "schema": {
                            "required": [
                                "username"
                            ],
                            "properties": {
                                "username": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Not OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "user_not_found": {
                                    "type": "boolean",
                                    "description": "Customer not found using username.",
                                    "example": true
                                },
                                "customer_has_no_email": {
                                    "type": "boolean",
                                    "description": "Associated customer has no email address.",
                                    "example": true
                                },
                                "smtp_error": {
                                    "type": "boolean",
                                    "description": "Unexpected issue sending email.",
                                    "example": true
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/customer/login/reset": {
            "patch": {
                "summary": "Reset Password [E]",
                "description": "Use a token sent by the Email Reset Token operation ( `/customer/login/forgot` ) to change a customer^s password.\n",
                "x-route-name": "customer-password-token-consume",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "noCache": true
                },
                "tags": [
                    "Customer / Login"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "reset",
                        "schema": {
                            "required": [
                                "token",
                                "new_password"
                            ],
                            "properties": {
                                "token": {
                                    "type": "string"
                                },
                                "new_password": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Not OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "invalid_token": {
                                    "type": "boolean",
                                    "description": "Token is not valid.",
                                    "example": true
                                },
                                "invalid_password": {
                                    "type": "boolean",
                                    "description": "New password does not meet password requirements.",
                                    "example": true
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/customer/paymentmethods": {
            "put": {
                "summary": "Create Payment Method Payform (I)",
                "description": "Calls OE to get a payform for adding a card",
                "tags": [
                    "Customer / Payment Methods"
                ],
                "x-route-name": "customer-paymentmethods-put",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "noCache": true
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "payform_setup",
                        "description": "Payform setup data",
                        "schema": {
                            "$ref": "#/definitions/CustomerNewPayform"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PayformLaunch"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Complete Payment Method Add/Update (I)",
                "description": "Get results for a payform submission",
                "tags": [
                    "Customer / Payment Methods"
                ],
                "x-route-name": "customer-paymentmethods-post",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "noCache": true
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "payform_complete",
                        "description": "Payform submission result data",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "order_id": {
                                    "type": "integer",
                                    "description": "order_id from OE query string of return_url",
                                    "example": 84657
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ClubPayformStatus"
                        }
                    },
                    "400": {
                        "description": "Not OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "is_invalid_transaction_id": {
                                    "type": "boolean",
                                    "description": "order_id is invalid",
                                    "example": true
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get Payment Methods",
                "description": "Gets all of the payment methods for the currently logged-in customer.\n",
                "tags": [
                    "Customer / Payment Methods"
                ],
                "x-route-name": "customer-paymentmethods-get",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "expireAfter": 3600,
                    "requireLogin": true,
                    "expiredBy": [
                        "delete_customer_paymentmethods__payment_method_id_",
                        "post_customer_paymentmethods"
                    ]
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PaymentMethod"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/customer/paymentmethods/{payment_method_id}": {
            "parameters": [
                {
                    "in": "path",
                    "name": "payment_method_id",
                    "required": true,
                    "type": "integer",
                    "minimum": 1,
                    "description": "The ID of the payment method to use."
                }
            ],
            "get": {
                "summary": "Get Payment Method [E]",
                "description": "Get a payment method belonging to the currently logged-in customer.\n",
                "tags": [
                    "Customer / Payment Methods"
                ],
                "x-route-name": "customer-paymentmethods-get-one",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "expireAfter": 3600,
                    "requireLogin": true,
                    "expiredBy": [
                        "delete_customer_paymentmethod__payment_method_id_"
                    ]
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PaymentMethod"
                        }
                    },
                    "400": {
                        "description": "Not OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "is_invalid_payment_method_id": {
                                    "type": "boolean",
                                    "description": "Payment Method ID is not valid.",
                                    "example": true
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "patch": {
                "summary": "Create Payform for Replace (I)",
                "description": "Calls OE to get a payform for replacing a card",
                "tags": [
                    "Customer / Payment Methods"
                ],
                "x-route-name": "customer-paymentmethods-patch",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "noCache": true
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "payform_setup",
                        "description": "Payment form setup data.",
                        "schema": {
                            "$ref": "#/definitions/CustomerNewPayform"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PayformLaunch"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Payment Method [E]",
                "description": "Delete a payment method belonging to the currently logged-in customer.\n",
                "tags": [
                    "Customer / Payment Methods"
                ],
                "x-route-name": "customer-paymentmethod-delete",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "noCache": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Not OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "is_invalid_payment_method_id": {
                                    "type": "boolean",
                                    "description": "Payment Method ID is not valid.",
                                    "example": true
                                },
                                "illegal_to_remove_from_subscription": {
                                    "type": "boolean",
                                    "description": "Payment Method is used for a club subscription.",
                                    "example": true
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/customer/remixes": {
            "get": {
                "summary": "Get Available Customer Remixes",
                "description": "Get detailed information about currently available Club Remixes.\n",
                "tags": [
                    "Customer / Remixes"
                ],
                "x-route-name": "customer-remixes-get",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "expireAfter": 3600,
                    "requireLogin": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ClubRemix"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/customer/subscriptions": {
            "put": {
                "summary": "Create Subscription (IP) [E]",
                "description": "Create a new subscription for the currently logged-in customer.\n\nNote: If is_pickup is set to `true`, shipping_address_id is still required as a fall-back.\n",
                "tags": [
                    "Customer / Subscriptions"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "new_customer_subscription",
                        "description": "Data for new subscription.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "club_tier_id",
                                "billing_address_id",
                                "shipping_address_id",
                                "payment_method_id"
                            ],
                            "properties": {
                                "club_tier_id": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "example": 2,
                                    "description": "ID of the club tier to use for the new subscription."
                                },
                                "billing_address_id": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "example": 123,
                                    "description": "ID of the customer^s billing address."
                                },
                                "shipping_address_id": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "example": 124,
                                    "description": "ID of the customer^s shipping address to use for the new subscription."
                                },
                                "payment_method_id": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "example": 42,
                                    "description": "ID of the customer^s payment method to use for the new subscription."
                                },
                                "is_gift": {
                                    "type": "boolean",
                                    "default": false,
                                    "example": true,
                                    "description": "Set to true if the new subscription is a gift."
                                },
                                "is_pickup": {
                                    "type": "boolean",
                                    "default": false,
                                    "example": true,
                                    "description": "Set to true if the new subscription will be for pickup."
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "subscription_id": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "example": 123
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Not OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "invalid_tier_id": {
                                    "type": "boolean",
                                    "description": "Tier ID is not valid.",
                                    "example": true
                                },
                                "invalid_billing_address_id": {
                                    "type": "boolean",
                                    "description": "Billing address ID is not valid",
                                    "example": true
                                },
                                "invalid_shipping_address_id": {
                                    "type": "boolean",
                                    "description": "Shipping address ID is not valid.",
                                    "example": true
                                },
                                "invalid_payment_method_id": {
                                    "type": "boolean",
                                    "description": "Payment method is not valid.",
                                    "example": true
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Get Subscriptions",
                "description": "Get an array of active club subscriptions belonging to the currently logged-in customer, sorted by signup_date descending (most recent first).\n\nAn active subscription is one that has not been canceled or has a cancellation date in the future.\n\nNote: cancellation dates are not included in the resultset and are controlled by the client.\n",
                "tags": [
                    "Customer / Subscriptions"
                ],
                "x-route-name": "customer-club-subscriptions-get",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "expireAfter": 3600,
                    "requireLogin": true,
                    "expiredBy": [
                        "put_customer_subscriptions",
                        "patch_customer_addresses_shipping",
                        "patch_customer_addresses_billing",
                        "patch_customer_addresses_shipping__address_id_",
                        "patch_customer_subscriptions__subscription_id_"
                    ]
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ClubSubscription"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/customer/subscriptions/{subscription_id}": {
            "parameters": [
                {
                    "in": "path",
                    "name": "subscription_id",
                    "required": true,
                    "type": "integer",
                    "minimum": 1,
                    "description": "The ID of the subscription."
                }
            ],
            "get": {
                "summary": "Get Subscription",
                "description": "Get a club subscription belonging to the currently logged-in customer.\n",
                "tags": [
                    "Customer / Subscriptions"
                ],
                "x-route-name": "customer-club-subscriptions-get-one",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "expireAfter": 3600,
                    "requireLogin": true,
                    "expiredBy": [
                        "patch_customer_addresses_shipping",
                        "patch_customer_addresses_billing",
                        "patch_customer_addresses_shipping__address_id_",
                        "patch_customer_subscriptions__subscription_id_"
                    ]
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ClubSubscription"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update Club Subscription",
                "description": "Update a club subscription belonging to the currently logged-in customer.\n",
                "tags": [
                    "Customer / Subscriptions"
                ],
                "x-route-name": "customer-club-subscription-update",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "noCache": true
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "subscription_update_params",
                        "schema": {
                            "required": [
                                "subscription_id",
                                "address_id",
                                "payment_method_id"
                            ],
                            "properties": {
                                "subscription_id": {
                                    "type": "integer",
                                    "minimum": 1
                                },
                                "address_id": {
                                    "type": "integer",
                                    "example": 2
                                },
                                "payment_method_id": {
                                    "type": "integer",
                                    "minimum": 1
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/customer/reservations": {
            "get": {
                "summary": "Get Reservations",
                "description": "Get an array of reservations belonging to the currently logged-in customer, sorted by start_datetime descending (most recent first).\n",
                "tags": [
                    "Customer / Reservations"
                ],
                "x-route-name": "customer-reservations-get",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "expireAfter": 3600,
                    "requireLogin": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Reservation"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/customer/reservations/{reservation_id}": {
            "get": {
                "summary": "Get Reservation (IP) [E]",
                "description": "Get a reservation belonging to the currently logged-in customer.\n",
                "tags": [
                    "Customer / Reservations"
                ],
                "x-cache": {
                    "expireAfter": 3600,
                    "requireLogin": true
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "reservation_id",
                        "required": true,
                        "type": "integer",
                        "minimum": 1,
                        "description": "The ID of the reservation."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Reservation"
                        }
                    },
                    "400": {
                        "description": "Not OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "invalid_reservation_id": {
                                    "type": "boolean",
                                    "description": "Reservation ID is not valid.",
                                    "example": true
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/customer/orders": {
            "get": {
                "summary": "Get Orders",
                "description": "Get an array of simple data for all orders placed by the currently logged-in customer, sorted by order_date descending (most recent first). Suitable for displaying a list of orders.\n",
                "tags": [
                    "Customer / Orders"
                ],
                "x-route-name": "customer-orders-get",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "expireAfter": 3600,
                    "requireLogin": true,
                    "expiredBy": [
                        "put_checkout"
                    ]
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrderSimple"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/customer/orders/{order_id}": {
            "get": {
                "summary": "Get Order",
                "description": "Get detailed data for an order belonging to the currently logged-in customer.\n",
                "tags": [
                    "Customer / Orders"
                ],
                "x-route-name": "customer-orders-get-one",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "expireAfter": 3600,
                    "requireLogin": true
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "order_id",
                        "required": true,
                        "type": "integer",
                        "minimum": 1,
                        "description": "The ID of the order."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderDetail"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/campaign/webview/{campaign_token}": {
            "get": {
                "summary": "Get Campaign Webview",
                "description": "Get the rendered subject, html and text content for an email campaign recipient using a secure token\n",
                "tags": [
                    "Campaign"
                ],
                "x-route-name": "customer-webview-get",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "expireAfter": 3600
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "campaign_token",
                        "required": true,
                        "type": "string",
                        "description": "Secure campaign token."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/EmailBody"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/campaign/unsubscribe": {
            "patch": {
                "summary": "Campaign Unsubscribe",
                "description": "Unsubscribe a customer from a campaign using a secure token\n",
                "tags": [
                    "Campaign"
                ],
                "x-route-name": "customer-campaign-unsubscribe",
                "x-route-version": "^1.0.0",
                "x-cache": {
                    "noCache": true
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "unsubscribe_parameters",
                        "schema": {
                            "required": [
                                "unsubscribe_token"
                            ],
                            "properties": {
                                "unsubscribe_token": {
                                    "type": "string",
                                    "description": "Secure unsubscribe token"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ShippingAddress": {
            "description": "Shipping Address",
            "allOf": [
                {
                    "$ref": "#/definitions/Address"
                },
                {
                    "type": "object",
                    "required": [
                        "is_default"
                    ],
                    "properties": {
                        "is_default": {
                            "type": "boolean",
                            "default": false
                        },
                        "is_club_shipping": {
                            "type": "boolean",
                            "readOnly": true,
                            "default": false
                        }
                    }
                }
            ]
        },
        "ShippingAddressPatch": {
            "description": "For updating a shipping address",
            "allOf": [
                {
                    "$ref": "#/definitions/Address"
                },
                {
                    "type": "object",
                    "properties": {
                        "make_default": {
                            "type": "boolean",
                            "default": false,
                            "description": "Set to true to make this the default shipping address"
                        }
                    }
                }
            ]
        },
        "Address": {
            "type": "object",
            "description": "Questions:\n1. how do we make state_code OR region required?\n",
            "required": [
                "address_line_1",
                "city",
                "state_code",
                "region",
                "country_code"
            ],
            "properties": {
                "address_id": {
                    "type": "integer",
                    "readOnly": true,
                    "example": 123456
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Bob"
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Smith"
                },
                "company_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Company"
                },
                "address_line_1": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "example": "123 Main Street"
                },
                "address_line_2": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Apt 12"
                },
                "city": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "Oakland"
                },
                "state_code": {
                    "type": "string",
                    "maxLength": 2,
                    "example": "CA"
                },
                "state_name": {
                    "type": "string",
                    "maxLength": 255,
                    "readOnly": true,
                    "example": "California"
                },
                "region": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "<Internationl>",
                    "description": "For non-US addresses"
                },
                "postal_code": {
                    "type": "string",
                    "maxLength": 50,
                    "example": 94611,
                    "description": "US zip or international postal code"
                },
                "zip_extension": {
                    "type": "string",
                    "maxLength": 4,
                    "example": 1234,
                    "description": "For US addresses only"
                },
                "country_code": {
                    "type": "string",
                    "maxLength": 2,
                    "example": "US"
                },
                "country_name": {
                    "type": "string",
                    "maxLength": 255,
                    "readOnly": true,
                    "example": "United States"
                },
                "phone": {
                    "type": "string",
                    "format": "phone",
                    "maxLength": 50,
                    "example": "<Phone>"
                },
                "birth_date": {
                    "type": "string",
                    "format": "date",
                    "example": "1970-01-31T00:00:00.000Z"
                }
            }
        },
        "Client": {
            "type": "object",
            "description": "Data for the client who has issued the API Key. \n\nThis data is managed by the client. If anything is missing or incorrect, contact them. There is no API method to modify this data.\n",
            "required": [
                "client_name"
            ],
            "properties": {
                "client_name": {
                    "type": "string",
                    "maxLength": 150,
                    "example": "Winery Name"
                },
                "shipping_street": {
                    "type": "string",
                    "maxLength": 200,
                    "example": "123 Main Street"
                },
                "shipping_city": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "Napa"
                },
                "ship_state_code": {
                    "type": "string",
                    "maxLength": 2,
                    "example": "CA"
                },
                "ship_state_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "California"
                },
                "ship_zip_code": {
                    "type": "string",
                    "format": "zip_code",
                    "maxLength": 50,
                    "example": "<ZipCode>"
                },
                "shipping_country_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "United States"
                },
                "home_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 150,
                    "example": "<URI>"
                },
                "store_url": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 255,
                    "example": "<URI>"
                },
                "customer_service_phone": {
                    "type": "string",
                    "format": "phone",
                    "maxLength": 50,
                    "example": "<Phone>"
                },
                "sales_phone": {
                    "type": "string",
                    "format": "phone",
                    "maxLength": 50,
                    "example": "<Phone>"
                },
                "wine_club_phone": {
                    "type": "string",
                    "format": "phone",
                    "maxLength": 20,
                    "example": "<Phone>"
                },
                "reservations_phone": {
                    "type": "string",
                    "format": "phone",
                    "maxLength": 100,
                    "example": "<Phone>"
                }
            }
        },
        "Cart": {
            "type": "object",
            "description": "A cart",
            "required": [
                "allocation_event_id",
                "club_event_id",
                "club_subscriber_id",
                "date_created",
                "discount_id",
                "discount_name",
                "free_shipping",
                "free_shipping_id",
                "free_shipping_name",
                "is_qualified_coupon",
                "is_discount_coupon",
                "is_free_shipping_coupon",
                "items_discount_total",
                "items_quantity_total",
                "items_subtotal",
                "items_total"
            ],
            "properties": {
                "allocation_event_id": {
                    "type": "integer",
                    "example": 123456
                },
                "club_event_id": {
                    "type": "integer",
                    "example": 123456
                },
                "club_subscriber_id": {
                    "type": "integer",
                    "example": 123456
                },
                "date_created": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2016-04-23T18:25:43.511Z"
                },
                "discount_id": {
                    "type": "integer",
                    "example": 123456
                },
                "discount_name": {
                    "type": "string",
                    "maxLength": 255
                },
                "free_shipping": {
                    "type": "boolean",
                    "example": true
                },
                "free_shipping_id": {
                    "type": "integer",
                    "example": 123456
                },
                "free_shipping_name": {
                    "type": "string",
                    "maxLength": 255
                },
                "is_qualified_coupon": {
                    "type": "boolean",
                    "example": true
                },
                "is_discount_coupon": {
                    "type": "boolean",
                    "example": false
                },
                "is_free_shipping_coupon": {
                    "type": "boolean",
                    "example": true
                },
                "items_discount_total": {
                    "type": "number",
                    "format": "money",
                    "example": 10
                },
                "items_quantity_total": {
                    "type": "integer",
                    "example": 12
                },
                "items_subtotal": {
                    "type": "number",
                    "format": "money",
                    "example": 100,
                    "description": "Items total before any discounts"
                },
                "items_total": {
                    "type": "number",
                    "format": "money",
                    "example": 90,
                    "description": "Item subtotal minus discounts, if any"
                },
                "cart_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CartProduct"
                    }
                }
            }
        },
        "CartProduct": {
            "type": "object",
            "description": "A product in a cart.",
            "required": [
                "cart_item_id",
                "cart_quantity",
                "description",
                "discount_each",
                "discount_price",
                "discount_total",
                "display_title",
                "feature_text",
                "header_image",
                "image_1",
                "image_2",
                "image_3",
                "is_taxable",
                "is_wine",
                "maximum_quantity",
                "minimum_quantity",
                "pdf",
                "product_id",
                "product_name",
                "quantity_increment",
                "regular_price",
                "SKU",
                "slug",
                "subtotal",
                "thumbnail",
                "total",
                "weight"
            ],
            "properties": {
                "cart_item_id": {
                    "type": "integer",
                    "example": 123456
                },
                "cart_quantity": {
                    "type": "integer",
                    "example": 4
                },
                "description": {
                    "type": "string",
                    "format": "html",
                    "example": "<HTML>"
                },
                "discount_each": {
                    "type": "number",
                    "format": "money",
                    "example": 49.95
                },
                "discount_price": {
                    "type": "number",
                    "format": "money",
                    "example": 49.95
                },
                "discount_total": {
                    "type": "number",
                    "format": "money",
                    "example": 49.95
                },
                "display_title": {
                    "type": "string",
                    "format": "html",
                    "example": "<HTML>"
                },
                "feature_text": {
                    "type": "string",
                    "format": "html",
                    "example": "<HTML>"
                },
                "header_image": {
                    "type": "string",
                    "format": "uri",
                    "example": "<URI>"
                },
                "image_1": {
                    "type": "string",
                    "format": "uri",
                    "example": "<URI>"
                },
                "image_2": {
                    "type": "string",
                    "format": "uri",
                    "example": "<URI>"
                },
                "image_3": {
                    "type": "string",
                    "format": "uri",
                    "example": "<URI>"
                },
                "is_taxable": {
                    "type": "boolean",
                    "example": true
                },
                "is_wine": {
                    "type": "boolean",
                    "description": "used to calculate shipping",
                    "example": true
                },
                "maximum_quantity": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 12
                },
                "minimum_quantity": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 1
                },
                "pdf": {
                    "type": "string",
                    "format": "uri",
                    "example": "<URI>"
                },
                "product_id": {
                    "type": "integer",
                    "example": 123456
                },
                "product_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Product Name"
                },
                "quantity_increment": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 2
                },
                "regular_price": {
                    "type": "number",
                    "format": "money",
                    "example": 49.95
                },
                "SKU": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "ABC123"
                },
                "slug": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "product-name"
                },
                "subtotal": {
                    "type": "number",
                    "format": "money",
                    "example": 49.95
                },
                "thumbnail": {
                    "type": "string",
                    "format": "uri",
                    "example": "<URI>"
                },
                "total": {
                    "type": "number",
                    "format": "money",
                    "example": 49.95
                },
                "weight": {
                    "type": "number",
                    "format": "float",
                    "example": 3
                }
            }
        },
        "CartEstimates": {
            "type": "object",
            "readOnly": true,
            "description": "Cart tax and shipping estimates.\n",
            "properties": {
                "ship_method": {
                    "$ref": "#/definitions/ShipMethod"
                }
            }
        },
        "CheckoutPreview": {
            "type": "object",
            "readOnly": true,
            "description": "Data for previewing a new order before saving it\n",
            "required": [
                "billing_address_line_1",
                "billing_address_line_2",
                "billing_birth_date",
                "billing_city",
                "billing_company_name",
                "billing_country_code",
                "billing_country_name",
                "billing_first_name",
                "billing_last_name",
                "billing_phone",
                "billing_postal_code",
                "billing_region",
                "billing_state_code",
                "billing_state_name",
                "billing_zip_extension",
                "cc_exp_mo",
                "cc_exp_year",
                "cc_name_on",
                "cc_span",
                "cc_type",
                "customer_birth_date",
                "customer_email_address",
                "customer_first_name",
                "customer_last_name",
                "pickup_address_line_1",
                "pickup_birth_date",
                "pickup_city",
                "pickup_company_name",
                "pickup_country_code",
                "pickup_country_name",
                "pickup_first_name",
                "pickup_last_name",
                "pickup_phone",
                "pickup_postal_code",
                "pickup_region",
                "pickup_state_code",
                "pickup_state_name",
                "pickup_zip_extension",
                "shipping_address_line_1",
                "shipping_address_line_2",
                "shipping_birth_date",
                "shipping_city",
                "shipping_company_name",
                "shipping_country_code",
                "shipping_country_name",
                "shipping_first_name",
                "shipping_last_name",
                "shipping_phone",
                "shipping_postal_code",
                "shipping_region",
                "shipping_state_code",
                "shipping_state_name",
                "shipping_zip_extension",
                "tax_city",
                "tax_county",
                "tax_rate",
                "tax_shipping",
                "tax_state_name",
                "tax_zip",
                "tax_zip_4",
                "discount_id",
                "discount_name",
                "free_shipping",
                "free_shipping_id",
                "free_shipping_name",
                "is_qualified_coupon",
                "is_discount_coupon",
                "is_free_shipping_coupon",
                "total",
                "total_products",
                "total_products_discount",
                "total_products_extended",
                "total_shipping",
                "total_shipping_discount",
                "total_shipping_extended",
                "total_tax",
                "total_taxable",
                "total_weight",
                "fulfillment_id",
                "purchase_status_id",
                "shipper",
                "shipper_code",
                "comments",
                "coupon_code",
                "gift_message",
                "payment_method_id",
                "pickup_date",
                "pickup_location_id",
                "purchase_source_id",
                "ship_date",
                "ship_method_id",
                "shipping_address_id",
                "shipping_comments"
            ],
            "properties": {
                "billing_address_line_1": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "123 Main Street"
                },
                "billing_address_line_2": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Suite D"
                },
                "billing_birth_date": {
                    "type": "string",
                    "format": "date",
                    "example": "1970-01-31T00:00:00.000Z"
                },
                "billing_city": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "City Name"
                },
                "billing_company_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Company Name"
                },
                "billing_country_code": {
                    "type": "string",
                    "maxLength": 2,
                    "example": "US"
                },
                "billing_country_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "United States"
                },
                "billing_first_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Bob"
                },
                "billing_last_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Smith"
                },
                "billing_phone": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "<Phone>"
                },
                "billing_postal_code": {
                    "type": "string",
                    "maxLength": 50,
                    "example": 94611
                },
                "billing_region": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "Region Name",
                    "description": "For non-US/Canada addresses"
                },
                "billing_state_code": {
                    "type": "string",
                    "maxLength": 2,
                    "example": "CA"
                },
                "billing_state_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "California"
                },
                "billing_zip_extension": {
                    "type": "string",
                    "maxLength": 4,
                    "example": 1234,
                    "description": "For US addresses only"
                },
                "cc_exp_mo": {
                    "type": "integer",
                    "example": 12
                },
                "cc_exp_year": {
                    "type": "integer",
                    "example": 2025
                },
                "cc_name_on": {
                    "type": "string",
                    "maxLength": 250,
                    "example": "Bob Smith"
                },
                "cc_span": {
                    "type": "string",
                    "maxLength": 4,
                    "example": 273
                },
                "cc_type": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Visa"
                },
                "customer_birth_date": {
                    "type": "string",
                    "format": "date",
                    "example": "1970-01-31T00:00:00.000Z"
                },
                "customer_email_address": {
                    "type": "string",
                    "maxLength": 120,
                    "example": "<Email>"
                },
                "customer_first_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Bob"
                },
                "customer_last_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Smith"
                },
                "pickup_address_line_1": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "123 Main Street"
                },
                "pickup_birth_date": {
                    "type": "string",
                    "format": "date",
                    "example": "1970-01-31T00:00:00.000Z"
                },
                "pickup_city": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "City Name"
                },
                "pickup_company_name": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "Client Location Name"
                },
                "pickup_country_code": {
                    "type": "string",
                    "maxLength": 2,
                    "example": "US"
                },
                "pickup_country_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "United States"
                },
                "pickup_first_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Bob"
                },
                "pickup_last_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Smith"
                },
                "pickup_phone": {
                    "type": "string",
                    "maxLength": 15,
                    "example": "<Phone>"
                },
                "pickup_postal_code": {
                    "type": "string",
                    "maxLength": 5,
                    "example": 94611
                },
                "pickup_region": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "Region Name",
                    "description": "For non-US/Canada addresses"
                },
                "pickup_state_code": {
                    "type": "string",
                    "maxLength": 2,
                    "example": "CA"
                },
                "pickup_state_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "California"
                },
                "pickup_zip_extension": {
                    "type": "string",
                    "maxLength": 4,
                    "example": 1234,
                    "description": "For US addresses only"
                },
                "shipping_address_line_1": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "123 Main Street"
                },
                "shipping_address_line_2": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Suite D"
                },
                "shipping_birth_date": {
                    "type": "string",
                    "format": "date",
                    "example": "1970-01-31T00:00:00.000Z"
                },
                "shipping_city": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "City Name"
                },
                "shipping_company_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Company Name"
                },
                "shipping_country_code": {
                    "type": "string",
                    "maxLength": 2,
                    "example": "US"
                },
                "shipping_country_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "United States"
                },
                "shipping_first_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Bob"
                },
                "shipping_last_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Smith"
                },
                "shipping_phone": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "<Phone>"
                },
                "shipping_postal_code": {
                    "type": "string",
                    "maxLength": 50,
                    "example": 94611
                },
                "shipping_region": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "Region Name",
                    "description": "For non-US/Canada addresses"
                },
                "shipping_state_code": {
                    "type": "string",
                    "maxLength": 2,
                    "example": "CA"
                },
                "shipping_state_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "California"
                },
                "shipping_zip_extension": {
                    "type": "string",
                    "maxLength": 4,
                    "example": 1234,
                    "description": "For US addresses only"
                },
                "tax_city": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "<Email>"
                },
                "tax_county": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "<Email>"
                },
                "tax_rate": {
                    "type": "number",
                    "example": 0.075
                },
                "tax_shipping": {
                    "type": "boolean",
                    "example": true
                },
                "tax_state_name": {
                    "type": "string",
                    "maxLength": 30,
                    "example": "California"
                },
                "tax_zip": {
                    "type": "string",
                    "maxLength": 5,
                    "example": 12345
                },
                "tax_zip_4": {
                    "type": "string",
                    "maxLength": 4,
                    "example": 6789
                },
                "discount_id": {
                    "type": "integer",
                    "example": 1234
                },
                "discount_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Spring Savings"
                },
                "free_shipping": {
                    "type": "boolean",
                    "example": true
                },
                "free_shipping_id": {
                    "type": "integer",
                    "example": 1235
                },
                "free_shipping_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Spring Offer"
                },
                "is_qualified_coupon": {
                    "type": "boolean",
                    "example": true
                },
                "is_discount_coupon": {
                    "type": "boolean",
                    "example": false
                },
                "is_free_shipping_coupon": {
                    "type": "boolean",
                    "example": true
                },
                "total": {
                    "type": "number",
                    "example": 105
                },
                "total_products": {
                    "type": "number",
                    "example": 90
                },
                "total_products_discount": {
                    "type": "number",
                    "example": 10
                },
                "total_products_extended": {
                    "type": "number",
                    "example": 80
                },
                "total_shipping": {
                    "type": "number",
                    "example": 10
                },
                "total_shipping_discount": {
                    "type": "number",
                    "example": 10
                },
                "total_shipping_extended": {
                    "type": "number",
                    "example": 0
                },
                "total_tax": {
                    "type": "number",
                    "example": 5
                },
                "total_taxable": {
                    "type": "number",
                    "example": 80
                },
                "total_weight": {
                    "type": "number",
                    "example": 5
                },
                "fulfillment_id": {
                    "type": "integer",
                    "example": 1234
                },
                "purchase_status_id": {
                    "type": "integer",
                    "example": 1234
                },
                "shipper": {
                    "type": "string",
                    "maxLength": 150,
                    "example": "UPS"
                },
                "shipper_code": {
                    "type": "string",
                    "maxLength": 25,
                    "example": "UPS2DAY"
                },
                "comments": {
                    "type": "string",
                    "example": "<TEXT>"
                },
                "coupon_code": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "SPRINGSAVINGS"
                },
                "gift_message": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Happy Birthday!"
                },
                "payment_method_id": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 123456
                },
                "pickup_date": {
                    "type": "string",
                    "format": "date",
                    "example": "2018-08-01T00:00:00.000Z"
                },
                "pickup_location_id": {
                    "type": "string",
                    "format": "uuid",
                    "maxLength": 36,
                    "example": "<UUID>"
                },
                "purchase_source_id": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 123456
                },
                "ship_date": {
                    "type": "string",
                    "format": "date",
                    "example": "2018-08-01T00:00:00.000Z"
                },
                "ship_method_id": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 123456
                },
                "shipping_address_id": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 123456
                },
                "shipping_comments": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Please knock loudly!"
                },
                "store_settings": {
                    "$ref": "#/definitions/StoreSettings"
                },
                "cart_products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CartProduct"
                    }
                }
            }
        },
        "ClubRemix": {
            "type": "object",
            "readOnly": true,
            "description": "Data for a Club Remix.\n",
            "required": [
                "club_subscription_id",
                "club_subscription_is_pickup",
                "club_subscription_is_gift",
                "club_subscription_shipper_override_code",
                "club_subscription_shipper_override_name",
                "club_tier_id",
                "club_tier_name",
                "club_event_id",
                "club_event_description",
                "club_event_remix_intro_message",
                "club_event_remix_complete_message",
                "club_event_remix_start_date",
                "club_event_remix_end_date",
                "club_event_remix_minimum_bottles_rule",
                "club_event_remix_maximum_bottles_rule",
                "club_event_remix_minimum_value_rule",
                "club_event_use_daily_rates",
                "billing_address_id",
                "billing_first_name",
                "billing_last_name",
                "billing_company_name",
                "billing_address_line_1",
                "billing_address_line_2",
                "billing_city",
                "billing_state_code",
                "billing_state_name",
                "billing_region",
                "billing_postal_code",
                "billing_zip_extension",
                "billing_phone",
                "billing_birth_date",
                "billing_country_name",
                "shipping_address_id",
                "shipping_first_name",
                "shipping_last_name",
                "shipping_company_name",
                "shipping_address_line_1",
                "shipping_address_line_2",
                "shipping_city",
                "shipping_state_code",
                "shipping_state_name",
                "shipping_region",
                "shipping_postal_code",
                "shipping_zip_extension",
                "shipping_phone",
                "shipping_birth_date",
                "shipping_country_name",
                "pickup_location_id",
                "pickup_first_name",
                "pickup_last_name",
                "pickup_location_name",
                "pickup_address_line_1",
                "pickup_city",
                "pickup_state_code",
                "pickup_postal_code",
                "pickup_phone",
                "pickup_fulfillment_id",
                "payment_method_id",
                "payment_method_name_on_card",
                "payment_method_span",
                "payment_method_expiration_month",
                "payment_method_expiration_year",
                "payment_method_card_type"
            ],
            "properties": {
                "club_subscription_id": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 1234
                },
                "club_subscription_is_pickup": {
                    "type": "boolean",
                    "example": true
                },
                "club_subscription_is_gift": {
                    "type": "boolean",
                    "example": true
                },
                "club_subscription_shipper_override_code": {
                    "type": "string",
                    "maxLength": 16,
                    "example": "UPA"
                },
                "club_subscription_shipper_override_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "UPS Next Day Air Early A.M."
                },
                "club_tier_id": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 1234
                },
                "club_tier_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Premier Reds"
                },
                "club_event_id": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 1234
                },
                "club_event_description": {
                    "type": "string",
                    "format": "html",
                    "example": "<HTML>"
                },
                "club_event_remix_intro_message": {
                    "type": "string",
                    "format": "html",
                    "example": "<HTML>"
                },
                "club_event_remix_complete_message": {
                    "type": "string",
                    "format": "html",
                    "example": "<HTML>"
                },
                "club_event_remix_start_date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2016-04-23T18:25:43.511Z"
                },
                "club_event_remix_end_date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2016-04-23T18:25:43.511Z"
                },
                "club_event_remix_minimum_bottles_rule": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 1234
                },
                "club_event_remix_maximum_bottles_rule": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 1234
                },
                "club_event_remix_minimum_value_rule": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 1234
                },
                "club_event_use_daily_rates": {
                    "type": "boolean",
                    "example": true
                },
                "billing_address_id": {
                    "type": "integer",
                    "example": 123456
                },
                "billing_first_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Bob"
                },
                "billing_last_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Smith"
                },
                "billing_company_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Company"
                },
                "billing_address_line_1": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "123 Main Street"
                },
                "billing_address_line_2": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Apt 12"
                },
                "billing_city": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "Oakland"
                },
                "billing_state_code": {
                    "type": "string",
                    "maxLength": 2,
                    "example": "CA"
                },
                "billing_state_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "California"
                },
                "billing_region": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "<International>",
                    "description": "For non-US addresses"
                },
                "billing_postal_code": {
                    "type": "string",
                    "maxLength": 50,
                    "example": 94611,
                    "description": "US zip or international postal code"
                },
                "billing_zip_extension": {
                    "type": "string",
                    "maxLength": 4,
                    "example": 1234,
                    "description": "For US addresses only"
                },
                "billing_phone": {
                    "type": "string",
                    "format": "phone",
                    "maxLength": 50,
                    "example": "<Phone>"
                },
                "billing_birth_date": {
                    "type": "string",
                    "format": "date",
                    "example": "1970-01-31T00:00:00.000Z"
                },
                "billing_country_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "United States"
                },
                "shipping_address_id": {
                    "type": "integer",
                    "example": 123456
                },
                "shipping_first_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Bob"
                },
                "shipping_last_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Smith"
                },
                "shipping_company_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Company"
                },
                "shipping_address_line_1": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "123 Main Street"
                },
                "shipping_address_line_2": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Apt 12"
                },
                "shipping_city": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "Oakland"
                },
                "shipping_state_code": {
                    "type": "string",
                    "maxLength": 2,
                    "example": "CA"
                },
                "shipping_state_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "California"
                },
                "shipping_region": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "<International>",
                    "description": "For non-US addresses"
                },
                "shipping_postal_code": {
                    "type": "string",
                    "maxLength": 50,
                    "example": 94611,
                    "description": "US zip or international postal code"
                },
                "shipping_zip_extension": {
                    "type": "string",
                    "maxLength": 4,
                    "example": 1234,
                    "description": "For US addresses only"
                },
                "shipping_phone": {
                    "type": "string",
                    "format": "phone",
                    "maxLength": 50,
                    "example": "<Phone>"
                },
                "shipping_birth_date": {
                    "type": "string",
                    "format": "date",
                    "example": "1970-01-31T00:00:00.000Z"
                },
                "shipping_country_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "United States"
                },
                "pickup_location_id": {
                    "type": "string",
                    "format": "uuid",
                    "maxLength": 36,
                    "example": "<UUID>"
                },
                "pickup_first_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Bob"
                },
                "pickup_last_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Smith"
                },
                "pickup_location_name": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "Tasting Room"
                },
                "pickup_address_line_1": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "123 Main Street"
                },
                "pickup_city": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "Oakland"
                },
                "pickup_state_code": {
                    "type": "string",
                    "maxLength": 2,
                    "example": "CA"
                },
                "pickup_postal_code": {
                    "type": "string",
                    "maxLength": 15,
                    "example": 94611,
                    "description": "US zip or international postal code"
                },
                "pickup_phone": {
                    "type": "string",
                    "format": "phone",
                    "maxLength": 15,
                    "example": "<Phone>"
                },
                "pickup_fulfillment_id": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 1234
                },
                "payment_method_id": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 123
                },
                "payment_method_name_on_card": {
                    "type": "string",
                    "maxLength": 250,
                    "example": "Bob Smith"
                },
                "payment_method_span": {
                    "type": "string",
                    "maxLength": 4,
                    "example": 2212
                },
                "payment_method_expiration_month": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 12,
                    "example": 12
                },
                "payment_method_expiration_year": {
                    "type": "integer",
                    "example": 2021
                },
                "payment_method_card_type": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "VISA"
                }
            }
        },
        "ClubTier": {
            "type": "object",
            "description": "Data for a club tier.\n",
            "required": [
                "club_tier_id",
                "club_tier_name",
                "display_order",
                "is_custom_tier"
            ],
            "properties": {
                "club_tier_id": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 123
                },
                "club_tier_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Tier One"
                },
                "description": {
                    "type": "string",
                    "format": "html",
                    "example": "<HTML>"
                },
                "is_custom_tier": {
                    "type": "boolean",
                    "example": false
                },
                "display_order": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 1
                }
            }
        },
        "ClubSubscription": {
            "type": "object",
            "readOnly": true,
            "description": "Data for a club subscription.\n",
            "required": [
                "club_tier_id",
                "club_tier_description",
                "club_tier_name",
                "custom_tier_is_editable",
                "custom_tier_minimum_quantity",
                "hold_until_date",
                "is_custom_tier",
                "is_gift",
                "is_pickup",
                "no_ship_end_date",
                "no_ship_start_date",
                "shipper_override_name",
                "signup_date",
                "subscription_id",
                "billing_address_id",
                "billing_first_name",
                "billing_last_name",
                "billing_company_name",
                "billing_address_line_1",
                "billing_address_line_2",
                "billing_city",
                "billing_state_code",
                "billing_state_name",
                "billing_region",
                "billing_postal_code",
                "billing_zip_extension",
                "billing_phone",
                "billing_birth_date",
                "billing_country_name",
                "shipping_address_id",
                "shipping_first_name",
                "shipping_last_name",
                "shipping_company_name",
                "shipping_address_line_1",
                "shipping_address_line_2",
                "shipping_city",
                "shipping_state_code",
                "shipping_state_name",
                "shipping_region",
                "shipping_postal_code",
                "shipping_zip_extension",
                "shipping_phone",
                "shipping_birth_date",
                "shipping_country_name",
                "payment_method_id",
                "payment_method_name_on_card",
                "payment_method_span",
                "payment_method_expiration_month",
                "payment_method_expiration_year",
                "payment_method_card_type"
            ],
            "properties": {
                "club_tier_id": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 1234
                },
                "club_tier_description": {
                    "type": "string",
                    "example": "<HTML>"
                },
                "club_tier_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Premier Reds"
                },
                "custom_tier_is_editable": {
                    "type": "boolean",
                    "example": false
                },
                "custom_tier_minimum_quantity": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 1234
                },
                "hold_until_date": {
                    "type": "string",
                    "format": "date",
                    "example": "2018-06-30T00:00:00.000Z"
                },
                "is_custom_tier": {
                    "type": "boolean",
                    "example": false
                },
                "is_gift": {
                    "type": "boolean",
                    "example": true
                },
                "is_pickup": {
                    "type": "boolean",
                    "example": false,
                    "description": "true if picking up at the winery"
                },
                "no_ship_end_date": {
                    "type": "string",
                    "format": "date",
                    "example": "2018-06-30T00:00:00.000Z"
                },
                "no_ship_start_date": {
                    "type": "string",
                    "format": "date",
                    "example": "2018-06-30T00:00:00.000Z"
                },
                "shipper_override_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "UPS Ground"
                },
                "signup_date": {
                    "type": "string",
                    "format": "date",
                    "example": "2018-06-30T00:00:00.000Z"
                },
                "subscription_id": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 1234
                },
                "billing_address_id": {
                    "type": "integer",
                    "example": 123456
                },
                "billing_first_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Bob"
                },
                "billing_last_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Smith"
                },
                "billing_company_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Company"
                },
                "billing_address_line_1": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "123 Main Street"
                },
                "billing_address_line_2": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Apt 12"
                },
                "billing_city": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "Oakland"
                },
                "billing_state_code": {
                    "type": "string",
                    "maxLength": 2,
                    "example": "CA"
                },
                "billing_state_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "California"
                },
                "billing_region": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "<International>",
                    "description": "For non-US addresses"
                },
                "billing_postal_code": {
                    "type": "string",
                    "maxLength": 50,
                    "example": 94611,
                    "description": "US zip or international postal code"
                },
                "billing_zip_extension": {
                    "type": "string",
                    "maxLength": 4,
                    "example": 1234,
                    "description": "For US addresses only"
                },
                "billing_phone": {
                    "type": "string",
                    "format": "phone",
                    "maxLength": 50,
                    "example": "<Phone>"
                },
                "billing_birth_date": {
                    "type": "string",
                    "format": "date",
                    "example": "1970-01-31T00:00:00.000Z"
                },
                "billing_country_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "United States"
                },
                "shipping_address_id": {
                    "type": "integer",
                    "example": 123456
                },
                "shipping_first_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Bob"
                },
                "shipping_last_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Smith"
                },
                "shipping_company_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Company"
                },
                "shipping_address_line_1": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "123 Main Street"
                },
                "shipping_address_line_2": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Apt 12"
                },
                "shipping_city": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "Oakland"
                },
                "shipping_state_code": {
                    "type": "string",
                    "maxLength": 2,
                    "example": "CA"
                },
                "shipping_state_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "California"
                },
                "shipping_region": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "<International>",
                    "description": "For non-US addresses"
                },
                "shipping_postal_code": {
                    "type": "string",
                    "maxLength": 50,
                    "example": 94611,
                    "description": "US zip or international postal code"
                },
                "shipping_zip_extension": {
                    "type": "string",
                    "maxLength": 4,
                    "example": 1234,
                    "description": "For US addresses only"
                },
                "shipping_phone": {
                    "type": "string",
                    "format": "phone",
                    "maxLength": 50,
                    "example": "<Phone>"
                },
                "shipping_birth_date": {
                    "type": "string",
                    "format": "date",
                    "example": "1970-01-31T00:00:00.000Z"
                },
                "shipping_country_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "United States"
                },
                "payment_method_id": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 123
                },
                "payment_method_name_on_card": {
                    "type": "string",
                    "maxLength": 250,
                    "example": "Bob Smith"
                },
                "payment_method_span": {
                    "type": "string",
                    "maxLength": 4,
                    "example": 2212
                },
                "payment_method_expiration_month": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 12,
                    "example": 12
                },
                "payment_method_expiration_year": {
                    "type": "integer",
                    "example": 2021
                },
                "payment_method_card_type": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "VISA"
                }
            }
        },
        "Customer": {
            "type": "object",
            "description": "Data about a customer",
            "required": [
                "first_name",
                "last_name",
                "email_address"
            ],
            "properties": {
                "first_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "John"
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Smith"
                },
                "company_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Company"
                },
                "email_address": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 255,
                    "example": "<Email>"
                },
                "mobile_phone": {
                    "type": "string",
                    "format": "phone",
                    "maxLength": 15,
                    "example": "<Phone>"
                },
                "phone_1": {
                    "type": "string",
                    "format": "phone",
                    "maxLength": 15,
                    "example": "<Phone>"
                },
                "phone_2": {
                    "type": "string",
                    "format": "phone",
                    "maxLength": 15,
                    "example": "<Phone>"
                },
                "birth_date": {
                    "type": "string",
                    "format": "date",
                    "example": "1970-01-31T00:00:00.000Z"
                },
                "allocation_tier_name": {
                    "type": "string",
                    "maxLength": 256,
                    "readOnly": true,
                    "example": "Premier Tier"
                },
                "volume_rank": {
                    "type": "integer",
                    "minimum": 1,
                    "readOnly": true,
                    "example": 500
                },
                "signup_date": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "example": "2016-04-23T18:25:43.511Z"
                },
                "is_ok_to_email": {
                    "type": "boolean",
                    "default": true,
                    "example": true
                },
                "is_ok_to_mail": {
                    "type": "boolean",
                    "default": true,
                    "example": true
                },
                "is_vip_pickup": {
                    "type": "boolean",
                    "readOnly": true,
                    "default": true,
                    "example": true
                },
                "billing_address": {
                    "$ref": "#/definitions/Address"
                },
                "primary_shipping_address": {
                    "$ref": "#/definitions/ShippingAddress"
                },
                "client_customer_tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ClientCustomerTag"
                    }
                }
            }
        },
        "CustomerNewMailingList": {
            "description": "CustomerNew schema plus billing (mailing) address",
            "allOf": [
                {
                    "$ref": "#/definitions/CustomerNew"
                },
                {
                    "type": "object",
                    "properties": {
                        "billing_address": {
                            "$ref": "#/definitions/Address"
                        },
                        "tag_ids": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "minimum": 1,
                                "example": 1
                            }
                        }
                    }
                }
            ]
        },
        "CustomerNewClubSubscription": {
            "description": "CustomerNew schema plus shipping address, billing address, payment method and subscription data",
            "allOf": [
                {
                    "$ref": "#/definitions/CustomerNew"
                },
                {
                    "type": "object",
                    "properties": {
                        "billing_address": {
                            "$ref": "#/definitions/Address"
                        },
                        "shipping_address": {
                            "$ref": "#/definitions/ShippingAddress"
                        },
                        "subscription": {
                            "type": "object",
                            "required": [
                                "club_tier_id"
                            ],
                            "properties": {
                                "club_tier_id": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "example": 1
                                },
                                "is_gift": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "is_pickup": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "hold_until_date": {
                                    "type": "string",
                                    "format": "date",
                                    "example": "2018-06-27T00:00:00.000Z"
                                },
                                "no_ship_start_date": {
                                    "type": "string",
                                    "format": "date",
                                    "example": "2018-05-27T00:00:00.000Z"
                                },
                                "no_ship_end_date": {
                                    "type": "string",
                                    "format": "date",
                                    "example": "2018-06-27T00:00:00.000Z"
                                }
                            }
                        }
                    }
                }
            ]
        },
        "CustomerNewPayform": {
            "type": "object",
            "required": [
                "background_color",
                "color"
            ],
            "properties": {
                "background_color": {
                    "type": "string",
                    "example": "#FFFFFF"
                },
                "color": {
                    "type": "string",
                    "example": "#000000"
                }
            }
        },
        "PayformLaunch": {
            "type": "object",
            "properties": {
                "actionUrl": {
                    "type": "string"
                },
                "sealedParams": {
                    "type": "string"
                }
            }
        },
        "ClubPayformStatus": {
            "type": "object",
            "properties": {
                "is_missing_transaction": {
                    "type": "boolean"
                },
                "is_unsubmitted": {
                    "type": "boolean"
                },
                "is_invalid_card": {
                    "type": "boolean"
                },
                "is_valid_token": {
                    "type": "boolean"
                }
            }
        },
        "CustomerNew": {
            "type": "object",
            "description": "New customer without addresses",
            "required": [
                "first_name",
                "last_name",
                "email_address",
                "password"
            ],
            "properties": {
                "first_name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "example": "John"
                },
                "last_name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255,
                    "example": "Smith"
                },
                "company_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Company"
                },
                "email_address": {
                    "type": "string",
                    "format": "email",
                    "minLength": 1,
                    "maxLength": 254,
                    "example": "<Email>"
                },
                "password": {
                    "type": "string",
                    "format": "password",
                    "minLength": 5,
                    "maxLength": 50,
                    "example": "<Password>"
                },
                "mobile_phone": {
                    "type": "string",
                    "format": "phone",
                    "maxLength": 15,
                    "example": "<Phone>"
                },
                "phone_1": {
                    "type": "string",
                    "format": "phone",
                    "maxLength": 15,
                    "example": "<Phone>"
                },
                "phone_2": {
                    "type": "string",
                    "format": "phone",
                    "maxLength": 15,
                    "example": "<Phone>"
                },
                "birth_date": {
                    "type": "string",
                    "format": "date",
                    "example": "1970-01-31"
                },
                "allocation_tier_id": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 1
                },
                "account_note": {
                    "type": "string",
                    "maxLength": 2147483647,
                    "example": "<LongText>"
                },
                "is_ok_to_email": {
                    "type": "boolean",
                    "default": true,
                    "example": true
                },
                "is_ok_to_mail": {
                    "type": "boolean",
                    "default": true,
                    "example": true
                }
            }
        },
        "CustomerUpdate": {
            "type": "object",
            "description": "Customer udpate schema (all properties required)",
            "required": [
                "birth_date",
                "company_name",
                "first_name",
                "last_name",
                "mobile_phone",
                "phone_1",
                "phone_2",
                "is_ok_to_email",
                "is_ok_to_mail"
            ],
            "properties": {
                "birth_date": {
                    "type": "string",
                    "format": "date",
                    "example": "1970-01-31T00:00:00.000Z"
                },
                "company_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Company"
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "John"
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Smith"
                },
                "mobile_phone": {
                    "type": "string",
                    "format": "phone",
                    "maxLength": 15,
                    "example": "<Phone>"
                },
                "phone_1": {
                    "type": "string",
                    "format": "phone",
                    "maxLength": 15,
                    "example": "<Phone>"
                },
                "phone_2": {
                    "type": "string",
                    "format": "phone",
                    "maxLength": 15,
                    "example": "<Phone>"
                },
                "is_ok_to_email": {
                    "type": "boolean",
                    "default": true,
                    "example": true
                },
                "is_ok_to_mail": {
                    "type": "boolean",
                    "default": true,
                    "example": true
                }
            }
        },
        "OrderDetail": {
            "type": "object",
            "readOnly": true,
            "description": "Detailed order information.\n",
            "required": [
                "order_id",
                "order_date",
                "order_status",
                "order_billing_status",
                "order_shipping",
                "order_tax",
                "order_subtotal",
                "order_total",
                "order_comments",
                "order_gift_message",
                "order_shipping_comments",
                "customer_email_address",
                "billing_first_name",
                "billing_last_name",
                "billing_company_name",
                "billing_address_line_1",
                "billing_address_line_2",
                "billing_city",
                "billing_state_name",
                "billing_state_code",
                "billing_region",
                "billing_postal_code",
                "billing_zip_extension",
                "billing_country_name",
                "billing_country_code",
                "billing_phone",
                "billing_birth_date",
                "shipment_is_pickup",
                "shipment_shipper",
                "pickup_first_name",
                "pickup_last_name",
                "shipment_first_name",
                "shipment_last_name",
                "shipment_company_name",
                "shipment_address_line_1",
                "shipment_address_line_2",
                "shipment_city",
                "shipment_state_code",
                "shipment_state_name",
                "shipment_region",
                "shipment_postal_code",
                "shipment_zip_extension",
                "shipment_country_code",
                "shipment_country_name",
                "shipment_phone",
                "shipment_birth_date"
            ],
            "properties": {
                "order_id": {
                    "type": "integer",
                    "example": 123456
                },
                "order_date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2016-04-23T18:25:43.511Z"
                },
                "order_status": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "<ShippingStatus>"
                },
                "order_billing_status": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "<BillingStatus>"
                },
                "order_shipping": {
                    "type": "number",
                    "example": 180
                },
                "order_tax": {
                    "type": "number",
                    "example": 180
                },
                "order_subtotal": {
                    "type": "number",
                    "example": 180
                },
                "order_total": {
                    "type": "number",
                    "example": 180
                },
                "order_comments": {
                    "type": "string",
                    "example": "Long text"
                },
                "order_gift_message": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Happy birthday!"
                },
                "order_shipping_comments": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Please knock loudly!"
                },
                "customer_email_address": {
                    "type": "string",
                    "maxLength": 120,
                    "example": "<Email>"
                },
                "billing_first_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Bob"
                },
                "billing_last_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Smith"
                },
                "billing_company_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Company Name"
                },
                "billing_address_line_1": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "123 Main Street"
                },
                "billing_address_line_2": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Suite D"
                },
                "billing_city": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "City Name"
                },
                "billing_state_code": {
                    "type": "string",
                    "maxLength": 2,
                    "example": "CA"
                },
                "billing_state_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "California"
                },
                "billing_region": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "Region Name",
                    "description": "For non-US/Canada addresses"
                },
                "billing_postal_code": {
                    "type": "string",
                    "maxLength": 50,
                    "example": 94611
                },
                "billing_zip_extension": {
                    "type": "string",
                    "maxLength": 4,
                    "example": 1234,
                    "description": "For US addresses only"
                },
                "billing_country_code": {
                    "type": "string",
                    "maxLength": 2,
                    "example": "US"
                },
                "billing_country_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "United States"
                },
                "billing_phone": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "<Phone>"
                },
                "billing_birth_date": {
                    "type": "string",
                    "format": "date",
                    "example": "1970-01-31T00:00:00.000Z"
                },
                "shipment_is_pickup": {
                    "type": "boolean",
                    "example": true,
                    "default": false
                },
                "shipment_shipper": {
                    "type": "string",
                    "maxLength": 150,
                    "example": "UPS 2nd Day"
                },
                "pickup_first_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Bob",
                    "description": "Pickup first name"
                },
                "pickup_last_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Smith",
                    "description": "Pickup last name"
                },
                "shipment_first_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Bob",
                    "description": "Recipient first name"
                },
                "shipment_last_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Smith",
                    "description": "Recipient last name"
                },
                "shipment_company_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Company Name",
                    "description": "For pickups, this will be the pickup location name"
                },
                "shipment_address_line_1": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "123 Main Street"
                },
                "shipment_address_line_2": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Suite D"
                },
                "shipment_city": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "City Name"
                },
                "shipment_state_code": {
                    "type": "string",
                    "maxLength": 2,
                    "example": "CA"
                },
                "shipment_state_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "California"
                },
                "shipment_region": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "Region Name",
                    "description": "For non-US/Canada addresses"
                },
                "shipment_postal_code": {
                    "type": "string",
                    "maxLength": 50,
                    "example": 94611
                },
                "shipment_zip_extension": {
                    "type": "string",
                    "maxLength": 4,
                    "example": 1234,
                    "description": "For US addresses only"
                },
                "shipment_country_code": {
                    "type": "string",
                    "maxLength": 2,
                    "example": "US"
                },
                "shipment_country_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "United States"
                },
                "shipment_phone": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "<Phone>"
                },
                "shipment_birth_date": {
                    "type": "string",
                    "format": "date",
                    "example": "1970-01-31T00:00:00.000Z"
                },
                "payments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderDetailPayment"
                    }
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderDetailProduct"
                    }
                },
                "tracking": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderDetailTracking"
                    }
                }
            }
        },
        "OrderItem": {
            "type": "object",
            "readOnly": true,
            "description": "Item in an Order\n",
            "properties": {
                "product_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "2010 Cabernet"
                },
                "price": {
                    "type": "number",
                    "format": "money",
                    "minimum": 0,
                    "example": 75
                },
                "quantity": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 4
                },
                "subtotal": {
                    "type": "number",
                    "format": "money",
                    "minimum": 0,
                    "example": 300
                },
                "discount": {
                    "type": "number",
                    "format": "money",
                    "minimum": 0,
                    "example": 30
                },
                "total": {
                    "type": "number",
                    "format": "money",
                    "minimum": 0,
                    "example": 270
                }
            }
        },
        "OrderSimple": {
            "type": "object",
            "readOnly": true,
            "description": "Basic order information.\n",
            "required": [
                "order_id",
                "order_date",
                "order_status",
                "order_billing_status",
                "order_total",
                "shipment_is_pickup",
                "shipment_shipper",
                "pickup_first_name",
                "pickup_last_name",
                "shipment_first_name",
                "shipment_last_name",
                "shipment_company_name",
                "shipment_address_line_1",
                "shipment_address_line_2",
                "shipment_city",
                "shipment_state_code",
                "shipment_state_name",
                "shipment_region",
                "shipment_postal_code",
                "shipment_zip_extension",
                "shipment_country_code",
                "shipment_country_name",
                "shipment_phone",
                "shipment_birth_date"
            ],
            "properties": {
                "order_id": {
                    "type": "integer",
                    "example": 123456
                },
                "order_date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2016-04-23T18:25:43.511Z"
                },
                "order_status": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "<ShippingStatus>"
                },
                "order_billing_status": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "<BillingStatus>"
                },
                "order_total": {
                    "type": "number",
                    "minimum": 0,
                    "example": 180
                },
                "shipment_is_pickup": {
                    "type": "boolean",
                    "example": true,
                    "default": false
                },
                "shipment_shipper": {
                    "type": "string",
                    "maxLength": 150,
                    "example": "UPS 2nd Day"
                },
                "pickup_first_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Bob",
                    "description": "Pickup first name"
                },
                "pickup_last_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Smith",
                    "description": "Pickup last name"
                },
                "shipment_first_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Bob",
                    "description": "Recipient first name"
                },
                "shipment_last_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Smith",
                    "description": "Recipient last name"
                },
                "shipment_company_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Company Name",
                    "description": "For pickups, this will be the pickup location name"
                },
                "shipment_address_line_1": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "123 Main Street"
                },
                "shipment_address_line_2": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Suite D"
                },
                "shipment_city": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "City Name"
                },
                "shipment_state_code": {
                    "type": "string",
                    "maxLength": 2,
                    "example": "CA"
                },
                "shipment_state_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "California"
                },
                "shipment_region": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "Region Name",
                    "description": "For non-US/Canada addresses"
                },
                "shipment_postal_code": {
                    "type": "string",
                    "maxLength": 50,
                    "example": 94611
                },
                "shipment_zip_extension": {
                    "type": "string",
                    "maxLength": 4,
                    "example": 1234,
                    "description": "For US addresses only"
                },
                "shipment_country_code": {
                    "type": "string",
                    "maxLength": 2,
                    "example": "US"
                },
                "shipment_country_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "United States"
                },
                "shipment_phone": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "<Phone>"
                },
                "shipment_birth_date": {
                    "type": "string",
                    "format": "date",
                    "example": "1970-01-31T00:00:00.000Z"
                }
            }
        },
        "OrderDetailPayment": {
            "type": "object",
            "readOnly": true,
            "description": "Payment made on an order\n",
            "required": [
                "billing_status",
                "card_type",
                "check_number",
                "expiration_month",
                "expiration_year",
                "funds_captured_date",
                "name_on_card",
                "payment_amount",
                "payment_date",
                "payment_type",
                "po_is_due",
                "po_number",
                "po_term",
                "span"
            ],
            "properties": {
                "billing_status": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "<BillingStatus>"
                },
                "card_type": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "VISA"
                },
                "check_number": {
                    "type": "string",
                    "maxLength": 50,
                    "example": 82
                },
                "expiration_month": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 12,
                    "example": 12
                },
                "expiration_year": {
                    "type": "integer",
                    "example": 2021
                },
                "funds_captured_date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2016-04-23T18:25:43.511Z"
                },
                "name_on_card": {
                    "type": "string",
                    "maxLength": 250,
                    "example": "Bob Smith"
                },
                "payment_amount": {
                    "type": "number",
                    "example": 100.25
                },
                "payment_date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2016-04-23T18:25:43.511Z"
                },
                "payment_type": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "<PaymentType>"
                },
                "po_is_due": {
                    "type": "boolean",
                    "example": true,
                    "default": false
                },
                "po_number": {
                    "type": "string",
                    "maxLength": 30,
                    "example": "T2199S"
                },
                "po_term": {
                    "type": "integer",
                    "example": 7
                },
                "span": {
                    "type": "string",
                    "maxLength": 4,
                    "example": 2212
                }
            }
        },
        "OrderDetailProduct": {
            "type": "object",
            "readOnly": true,
            "description": "Product included in an order\n",
            "required": [
                "discount_price",
                "product_name",
                "quantity",
                "regular_price",
                "sku",
                "subtotal",
                "total"
            ],
            "properties": {
                "discount_price": {
                    "type": "number",
                    "example": 100.25
                },
                "product_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Product Name"
                },
                "quantity": {
                    "type": "integer",
                    "example": 12
                },
                "regular_price": {
                    "type": "number",
                    "example": 100.25
                },
                "sku": {
                    "type": "string",
                    "maxLength": 150,
                    "example": "ABC123"
                },
                "subtotal": {
                    "type": "number",
                    "example": 100.25
                },
                "total": {
                    "type": "number",
                    "example": 100.25
                }
            }
        },
        "OrderDetailTracking": {
            "type": "object",
            "readOnly": true,
            "description": "Product included in an order\n",
            "required": [
                "carrier_name",
                "carrier_tracking_number",
                "carrier_tracking_url",
                "date_shipped",
                "date_delivered"
            ],
            "properties": {
                "carrier_name": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "UPS"
                },
                "carrier_tracking_number": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "ABC123"
                },
                "carrier_tracking_url": {
                    "type": "string",
                    "maxLength": 255
                },
                "date_shipped": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2016-04-23T18:25:43.511Z"
                },
                "date_delivered": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2016-04-23T18:25:43.511Z"
                }
            }
        },
        "ProductCategory": {
            "type": "object",
            "readOnly": true,
            "description": "Product category information.\n",
            "required": [
                "category_id",
                "category_name",
                "child_count",
                "display_html",
                "display_order",
                "header_image",
                "image",
                "parent_category_id",
                "parent_slug",
                "product_count",
                "slug",
                "thumbnail_image"
            ],
            "properties": {
                "category_id": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 2
                },
                "category_name": {
                    "type": "string",
                    "maxLength": 200,
                    "example": "Category Name"
                },
                "child_count": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 2
                },
                "display_html": {
                    "type": "string",
                    "format": "html",
                    "example": "<HTML>"
                },
                "display_order": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 2
                },
                "header_image": {
                    "type": "string",
                    "format": "uri",
                    "example": "<URI>"
                },
                "image": {
                    "type": "string",
                    "format": "uri",
                    "example": "<URI>"
                },
                "parent_category_id": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 1
                },
                "parent_slug": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "category-name"
                },
                "product_count": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 2
                },
                "slug": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "category-name"
                },
                "thumbnail_image": {
                    "type": "string",
                    "format": "uri",
                    "example": "<URI>"
                }
            }
        },
        "PaymentMethod": {
            "type": "object",
            "readOnly": true,
            "description": "Payment method information\n",
            "required": [
                "payment_method_id",
                "card_type",
                "span",
                "expiration_month",
                "expiration_year",
                "is_club_payment_method"
            ],
            "properties": {
                "payment_method_id": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 123
                },
                "card_type": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "VISA"
                },
                "span": {
                    "type": "string",
                    "maxLength": 4,
                    "example": "VISA"
                },
                "expiration_month": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 12,
                    "example": 12
                },
                "expiration_year": {
                    "type": "integer",
                    "example": 2021
                },
                "name_on_card": {
                    "type": "string",
                    "maxLength": 250,
                    "example": "Bob Smith"
                },
                "is_club_payment_method": {
                    "type": "boolean",
                    "example": false,
                    "default": false
                }
            }
        },
        "ClientLocation": {
            "type": "object",
            "description": "Client location information\n",
            "required": [
                "location_id",
                "location_name",
                "address_line_1",
                "city",
                "state_code",
                "state_name",
                "postal_code",
                "zip_extension",
                "country_code",
                "country_name",
                "phone"
            ],
            "properties": {
                "location_id": {
                    "type": "string",
                    "format": "uuid",
                    "maxLength": 36,
                    "example": "<UUID>"
                },
                "location_name": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "Tasting Room"
                },
                "address_line_1": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "123 Main Street"
                },
                "city": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "Oakland"
                },
                "state_code": {
                    "type": "string",
                    "maxLength": 2,
                    "example": "CA"
                },
                "state_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "California"
                },
                "postal_code": {
                    "type": "string",
                    "maxLength": 15,
                    "example": 94611,
                    "description": "US zip or international postal code"
                },
                "zip_extension": {
                    "type": "string",
                    "maxLength": 4,
                    "example": 1234,
                    "description": "For US addresses only"
                },
                "country_code": {
                    "type": "string",
                    "maxLength": 2,
                    "example": "US"
                },
                "country_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "United States"
                },
                "phone": {
                    "type": "string",
                    "format": "phone",
                    "maxLength": 15,
                    "example": "<Phone>"
                }
            }
        },
        "Product": {
            "type": "object",
            "readOnly": true,
            "description": "Product information.\n",
            "required": [
                "product_id",
                "product_name",
                "slug",
                "feature_text",
                "description",
                "display_title",
                "SKU",
                "product_type_id",
                "product_type",
                "product_status",
                "header_image",
                "image_1",
                "image_2",
                "image_3",
                "thumbnail",
                "pdf",
                "technical_notes",
                "secondary_notes",
                "review_notes",
                "minimum_quantity",
                "maximum_quantity",
                "quantity_increment",
                "price",
                "weight",
                "is_taxable",
                "is_wine",
                "display_order"
            ],
            "properties": {
                "product_id": {
                    "type": "integer",
                    "example": 123456
                },
                "product_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Product Name"
                },
                "slug": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "product-name"
                },
                "feature_text": {
                    "type": "string",
                    "format": "html",
                    "example": "<HTML>"
                },
                "description": {
                    "type": "string",
                    "format": "html",
                    "example": "<HTML>"
                },
                "display_title": {
                    "type": "string",
                    "format": "html",
                    "example": "<HTML>"
                },
                "SKU": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "ABC123"
                },
                "product_type_id": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 2
                },
                "product_type": {
                    "type": "string",
                    "maxLength": 200,
                    "example": "Wine"
                },
                "product_status": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "Active"
                },
                "header_image": {
                    "type": "string",
                    "format": "uri",
                    "example": "<URI>"
                },
                "image_1": {
                    "type": "string",
                    "format": "uri",
                    "example": "<URI>"
                },
                "image_2": {
                    "type": "string",
                    "format": "uri",
                    "example": "<URI>"
                },
                "image_3": {
                    "type": "string",
                    "format": "uri",
                    "example": "<URI>"
                },
                "thumbnail": {
                    "type": "string",
                    "format": "uri",
                    "example": "<URI>"
                },
                "pdf": {
                    "type": "string",
                    "format": "uri",
                    "example": "<URI>"
                },
                "technical_notes": {
                    "type": "string",
                    "format": "html",
                    "example": "<HTML>"
                },
                "secondary_notes": {
                    "type": "string",
                    "format": "html",
                    "example": "<HTML>"
                },
                "review_notes": {
                    "type": "string",
                    "format": "html",
                    "example": "<HTML>"
                },
                "minimum_quantity": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 1
                },
                "maximum_quantity": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 12
                },
                "quantity_increment": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 2
                },
                "price": {
                    "type": "number",
                    "format": "money",
                    "example": 49.95
                },
                "weight": {
                    "type": "number",
                    "format": "float",
                    "example": 3
                },
                "is_taxable": {
                    "type": "boolean",
                    "example": true
                },
                "is_wine": {
                    "type": "boolean",
                    "description": "used to calculate shipping",
                    "example": true
                },
                "display_order": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 123456
                }
            }
        },
        "Reservation": {
            "type": "object",
            "readOnly": true,
            "description": "Reservation information\n",
            "required": [
                "reservation_id",
                "is_primary_customer",
                "party_name",
                "party_size",
                "number_tasting",
                "create_datetime",
                "requested_datetime",
                "start_datetime",
                "end_datetime",
                "contact_phone_number",
                "contact_email_address",
                "reservation_type",
                "reservation_status",
                "station_name",
                "location_name",
                "location_address_line_1",
                "location_city",
                "location_state_code",
                "location_state_name",
                "location_postal_code",
                "location_country_code",
                "location_country_name",
                "location_phone"
            ],
            "properties": {
                "reservation_id": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 123
                },
                "is_primary_customer": {
                    "type": "boolean",
                    "example": true,
                    "default": false
                },
                "party_name": {
                    "type": "string",
                    "maxLength": 128,
                    "example": "Bob Smith Family"
                },
                "party_size": {
                    "type": "integer",
                    "example": 6
                },
                "number_tasting": {
                    "type": "integer",
                    "example": 4
                },
                "create_datetime": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2016-04-23T18:25:43.511Z"
                },
                "requested_datetime": {
                    "type": "string",
                    "example": "2016-04-23T18:25:43.511Z"
                },
                "start_datetime": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2016-04-23T18:25:43.511Z"
                },
                "end_datetime": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2016-04-23T19:25:43.511Z"
                },
                "contact_phone_number": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "<Phone>"
                },
                "contact_email_address": {
                    "type": "string",
                    "maxLength": 128,
                    "example": "<Email>"
                },
                "reservation_type": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "Cave Tour"
                },
                "reservation_status": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "<ReservationStatus>"
                },
                "station_name": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "Cave Patio"
                },
                "location_name": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "Visitor Center"
                },
                "location_address_line_1": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "123 Main Street"
                },
                "location_city": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "Oakland"
                },
                "location_state_code": {
                    "type": "string",
                    "maxLength": 2,
                    "example": "CA"
                },
                "location_state_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "California"
                },
                "location_postal_code": {
                    "type": "string",
                    "maxLength": 15,
                    "example": 94611,
                    "description": "US zip or international postal code"
                },
                "location_country_code": {
                    "type": "string",
                    "maxLength": 2,
                    "example": "US"
                },
                "location_country_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "United States"
                },
                "location_phone": {
                    "type": "string",
                    "format": "phone",
                    "maxLength": 15,
                    "example": "<Phone>"
                }
            }
        },
        "ClientCustomerTag": {
            "type": "object",
            "readOnly": true,
            "description": "Client Customer Tags",
            "required": [
                "tag_group_id",
                "tag_group_name",
                "tag_selection_type",
                "tag_id",
                "tag_name",
                "is_assigned"
            ],
            "properties": {
                "tag_group_id": {
                    "type": "integer",
                    "example": 123456
                },
                "tag_group_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "What is your favorite color?"
                },
                "tag_selection_type": {
                    "type": "string",
                    "maxLength": 10,
                    "example": "<TagSelectionType> (MULTIPLE or SINGLE)"
                },
                "tag_id": {
                    "type": "integer",
                    "example": 123456
                },
                "tag_name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Red"
                },
                "is_assigned": {
                    "type": "boolean",
                    "example": true,
                    "default": false
                }
            }
        },
        "ShipMethod": {
            "type": "object",
            "readOnly": true,
            "description": "Ship Method information",
            "required": [
                "ship_method_id",
                "ship_method_name",
                "is_default_rate",
                "ship_rate"
            ],
            "properties": {
                "ship_method_id": {
                    "type": "integer",
                    "example": 123456
                },
                "ship_method_name": {
                    "type": "string",
                    "maxLength": 32,
                    "example": "Fedex 2 Day"
                },
                "is_default_rate": {
                    "type": "boolean",
                    "example": true,
                    "description": "Will be true for one item in the resultset"
                },
                "ship_rate": {
                    "type": "number",
                    "format": "money",
                    "example": 18.99
                }
            }
        },
        "SPARequest": {
            "type": "object",
            "required": [
                "spa_version"
            ],
            "properties": {
                "spa_version": {
                    "type": "integer",
                    "example": 1,
                    "minimum": -1
                },
                "needs_jquery": {
                    "type": "boolean",
                    "example": false
                },
                "needs_moment": {
                    "type": "boolean",
                    "example": false
                },
                "needs_moment_tz": {
                    "type": "boolean",
                    "example": false
                },
                "needs_validate": {
                    "type": "boolean",
                    "example": false
                },
                "needs_pubsub": {
                    "type": "boolean",
                    "example": false
                },
                "needs_swagger_client": {
                    "type": "boolean",
                    "example": false
                },
                "needs_cldr": {
                    "type": "boolean",
                    "example": false
                },
                "needs_cldr_event": {
                    "type": "boolean",
                    "example": false
                },
                "needs_cldr_supplemental": {
                    "type": "boolean",
                    "example": false
                },
                "needs_cldr_unresolved": {
                    "type": "boolean",
                    "example": false
                },
                "needs_globalize": {
                    "type": "boolean",
                    "example": false
                },
                "needs_globalize_number": {
                    "type": "boolean",
                    "example": false
                },
                "needs_globalize_plural": {
                    "type": "boolean",
                    "example": false
                },
                "needs_globalize_currency": {
                    "type": "boolean",
                    "example": false
                },
                "needs_globalize_message": {
                    "type": "boolean",
                    "example": false
                },
                "needs_globalize_unit": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "SPADetails": {
            "type": "object",
            "required": [
                "file_name",
                "spa_path",
                "widget_path",
                "cldr_path",
                "template_path"
            ],
            "properties": {
                "file_name": {
                    "type": "string",
                    "example": "ecp-7a69.js"
                },
                "spa_path": {
                    "type": "string",
                    "example": "https://spa-cdn-test.ecellar-api.com/1/js/"
                },
                "widget_path": {
                    "type": "string",
                    "example": "https://spa-cdn-test.ecellar-api.com/1/js/"
                },
                "cldr_path": {
                    "type": "string",
                    "example": "https://cldr-cdn.ecellar-api.com/"
                },
                "template_path": {
                    "type": "string",
                    "example": "https://spa-cdn-test.ecellar-api.com/1/templates/"
                },
                "version": {
                    "type": "integer",
                    "example": 1
                }
            },
            "description": "SPA load details"
        },
        "StoreSettings": {
            "type": "object",
            "readOnly": true,
            "required": [
                "allow_coupon_code",
                "allow_extra_requests",
                "allow_international_shipping",
                "allow_pickup_date",
                "allow_repeat_extra_requests",
                "allow_ship_date"
            ],
            "properties": {
                "allow_coupon_code": {
                    "type": "boolean",
                    "example": true,
                    "default": false
                },
                "allow_extra_requests": {
                    "type": "boolean",
                    "example": true,
                    "default": false
                },
                "allow_international_shipping": {
                    "type": "boolean",
                    "example": true,
                    "default": false
                },
                "allow_pickup_date": {
                    "type": "boolean",
                    "example": true,
                    "default": false
                },
                "allow_repeat_extra_requests": {
                    "type": "boolean",
                    "example": true,
                    "default": false
                },
                "allow_ship_date": {
                    "type": "boolean",
                    "example": true,
                    "default": false
                }
            }
        },
        "TaxRate": {
            "type": "object",
            "readOnly": true,
            "required": [
                "city",
                "county",
                "rate",
                "resolved_to",
                "state_code",
                "tax_shipping",
                "zip"
            ],
            "properties": {
                "city": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "Calistoga"
                },
                "county": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "Sonoma"
                },
                "rate": {
                    "type": "number",
                    "example": 0.095
                },
                "resolved_to": {
                    "type": "string",
                    "maxLength": 10,
                    "example": "city",
                    "description": "city, county or state"
                },
                "state_code": {
                    "type": "string",
                    "maxLength": 2,
                    "example": "CA"
                },
                "tax_shipping": {
                    "type": "boolean",
                    "example": true
                },
                "zip": {
                    "type": "string",
                    "maxLength": 5,
                    "example": 94505
                }
            }
        },
        "EmailBody": {
            "type": "object",
            "readOnly": true,
            "properties": {
                "Subject": {
                    "type": "string",
                    "example": "Plan your next visit to wine country"
                },
                "HTML": {
                    "type": "string",
                    "example": "<html content>"
                },
                "Plain": {
                    "type": "string",
                    "example": "Plain text content"
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            },
            "required": [
                "code",
                "message"
            ]
        }
    },
    "responses": {
        "NotFound": {
            "description": "The specified resource was not found",
            "schema": {
                "$ref": "#/definitions/Error"
            }
        },
        "Unauthorized": {
            "description": "API key is missing or invalid",
            "headers": {
                "WWW_Authenticate": {
                    "type": "string"
                }
            },
            "schema": {
                "$ref": "#/definitions/Error"
            }
        },
        "Forbidden": {
            "description": "Action is forbidden",
            "schema": {
                "$ref": "#/definitions/Error"
            }
        }
    },
    "parameters": {},
    "securityDefinitions": {
        "ApiKeyHeader": {
            "type": "apiKey",
            "in": "header",
            "name": "x-api-key",
            "description": "Use the HTTP x-api-key header to include your API Key in every REST call.\n\nSee the `Authorization` area of this document for information about how to obtain an API Key.\n"
        },
        "SessionKeyHeader": {
            "type": "apiKey",
            "in": "header",
            "name": "X-cmVjb2ctc3RhbXA",
            "description": "Use the HTTP X-cmVjb2ctc3RhbXA header to maintain session state\n"
        }
    },
    "tags": []
}