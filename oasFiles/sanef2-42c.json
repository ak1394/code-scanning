{
  "openapi": "3.0.1",
  "info": {
    "title": "SANEF API",
    "description": "Documentation Sanef API.",
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://196.6.192.106:8018",
      "description": "Server description"
    }
  ],
  "paths": {
    "/accountBalanceEnquiryOneTimeInitiate": {
      "get": {
        "tags": [
          "AccountBalanceEnquiry"
        ],
        "summary": "Get account detail endpoint",
        "parameters": [
          {
            "name": "ReferenceNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[0-9]{11}$",
              "maxLength": 11,
              "minLength": 11,
              "nullable": true
            }
          },
          {
            "name": "DebitAccountNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[0-9]{10}$",
              "maxLength": 10,
              "minLength": 10,
              "nullable": true
            }
          },
          {
            "name": "Hash",
            "in": "query",
            "schema": {
              "type": "string",
              "maxLength": 128,
              "minLength": 128,
              "pattern": "^[a-zA-Z0-9]{128}$",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              }
            }
          }
        }
      }
    },
    "/accountBalanceEnquiryOneTimeValidate": {
      "get": {
        "tags": [
          "AccountBalanceEnquiry"
        ],
        "parameters": [
          {
            "name": "ReferenceNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[0-9]{11}$",
              "maxLength": 11,
              "minLength": 11,
              "nullable": true
            }
          },
          {
            "name": "OriginalReferenceNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[0-9]{11}$",
              "maxLength": 11,
              "minLength": 11,
              "nullable": true
            }
          },
          {
            "name": "AccountNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[0-9]{10}$",
              "maxLength": 10,
              "minLength": 10,
              "nullable": true
            }
          },
          {
            "name": "ValidationCode",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[0-9]{4}$",
              "maxLength": 4,
              "minLength": 4,
              "nullable": true
            }
          },
          {
            "name": "Hash",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9]{128}$",
              "maxLength": 128,
              "minLength": 128,
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              }
            }
          }
        }
      }
    },
    "/accountDetailEnquiry": {
      "get": {
        "tags": [
          "AccountDetail"
        ],
        "summary": "Get account detail endpoint",
        "parameters": [
          {
            "name": "ReferenceNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[0-9]{11}$",
              "maxLength": 11,
              "minLength": 11,
              "nullable": true
            }
          },
          {
            "name": "AccountNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[0-9]{10}$",
              "maxLength": 10,
              "minLength": 10,
              "nullable": true
            }
          },
          {
            "name": "Hash",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9]{128}$",
              "maxLength": 128,
              "minLength": 128,
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "nullable": true
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "nullable": true
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          }
        }
      }
    },
    "/accountOpening": {
      "post": {
        "tags": [
          "AccountOpening"
        ],
        "summary": "Account opening",
        "description": "Sample request:\n\n     POST /accountOpening \n     {\n       \"Salutation\": \"MR.\",\n       \"FirstName\": \"Jones\",\n       \"MiddleName\": \"Aneke\",\n       \"ReferenceNumber\": \"892382382389\",\n       \"LastName\": \"Ifok\",\n       \"Gender\": \"M\",\n       \"Email\": \"me@me.com\",\n       \"PhoneNumber\": \"234(0)8031121190\",\n       \"DateOfBirth\": \"03/05/1970\",\n       \"Address\": \"Ajah\",\n       \"MaritalStatus\": \"MRIED\",\n       \"Bvn\": \"22203651317\",\n       \"Hash\": \"iuwiuwuiiuweu\"\n     }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBankAccountDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBankAccountDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBankAccountDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              }
            }
          }
        }
      }
    },
    "/accountCredit": {
      "post": {
        "tags": [
          "CreditAccount"
        ],
        "summary": "Credit account API",
        "description": "Sample request:\r\n\r\n     POST /accountCredit \r\n     {\r\n       \"Amount\": \"10.00\",\r\n       \"ReferenceNumber\": \"53000008766\",\r\n       \"CreditAccountNumber\": \"1501294249\",\r\n       \"Narration\": \"please pay money into my accpunt\",\r\n       \"Hash\": \"98bcf662e347d8515978df6f94a18d47623cb6ed7d0f0e395b1f14e0385c746892bdbe1b8541a7024a45e5f3b31ab9a48d04ea15c42cdc71d99e1fcd94b7cb13\",\r\n     }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CashinDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "nullable": true
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "nullable": true
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          }
        }
      }
    },
    "/accountDebitOneTimeInitiate": {
      "post": {
        "tags": [
          "DebitOneTimeInitiate"
        ],
        "summary": "API to initiate otp generation\r\nTo get the hash value, append ReferenceNumber, DebitAccountNumber, Amount and the client secret key, \r\nthen hash the combination of all appended values. They must be in this order",
        "description": "Sample request:\r\n\r\n     POST /accountDebitOneTimeInitiate \r\n     {\r\n       \"ReferenceNumber\": \"12345678909\",\r\n       \"DebitAccountNumber\": \"1300001363\",//1501294256\r\n       \"Hash\": \"98bcf662e347d8515978df6f94a18d47623cb6ed7d0f0e395b1f14e0385c746892bdbe1b8541a7024a45e5f3b31ab9a48d04ea15c42cdc71d99e1fcd94b7cb13\",\r\n       \"Amount\": \"5.00\",\r\n       \"Narration\": \"i want to debit\"\r\n     }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountToDebitOneTimeInitiateRequestDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountToDebitOneTimeInitiateRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountToDebitOneTimeInitiateRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              }
            }
          }
        }
      }
    },
    "/accountDebitOneTimeValidate": {
      "post": {
        "tags": [
          "DebitOneTimeValidate"
        ],
        "summary": "API to validate otp and debit customer\r\nTo get the hash value, append ReferenceNumber, OriginalReferenceNumber, DebitAccountNumber, validationCode and the client secret key, \r\nthen hash the combination of all appended values. They must be in this order",
        "description": "Sample request:\r\n\r\n     POST /accountDebitOneTimeInitiate \r\n     {\r\n       \"ReferenceNumber\": \"12345678900\",\r\n       \"OriginalReferenceNumber\":\"12345678901\",\r\n       \"DebitAccountNumber\": \"5300000333\",\r\n       \"validationCode\": \"0987\",\r\n       \"Hash\": \"98bcf662e347d8515978df6f94a18d47623cb6ed7d0f0e395b1f14e0385c746892bdbe1b8541a7024a45e5f3b31ab9a48d04ea15c42cdc71d99e1fcd94b7cb13\"\r\n     }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountToDebitOneTimeValidateRequestDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountToDebitOneTimeValidateRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountToDebitOneTimeValidateRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "nullable": true
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "nullable": true
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          }
        }
      }
    },
    "/hash": {
      "post": {
        "tags": [
          "Hashing"
        ],
        "summary": "Hashing API",
        "description": "Sample request:\r\n\r\n     POST /hash \r\n     {\r\n       \"Data\": \"rawData\",\r\n     }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HashData"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HashData"
              }
            },
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              }
            }
          }
        }
      }
    },
    "/initiateTokenNotification": {
      "post": {
        "tags": [
          "Token"
        ],
        "summary": "initiateTokenNotification",
        "description": "Sample request:\r\n\r\n     POST /initiateTokenNotification \r\n     {\r\n       \"ReferenceNumber\": \"MR.\",\r\n       \"AccountNUmber\": \"1501294249\",\r\n       \"TokenizationProcessType\": \"AccountDebitOneTimeInitiate\",\r\n       \"Narration\": \"i want to debit\",\r\n       \"Hash\": \"234(0)8031121190\",\r\n     }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InitiateOtpCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InitiateOtpCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InitiateOtpCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponseDtoResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponseDtoResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponseDtoResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponseDtoResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponseDtoResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponseDtoResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponseDtoResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponseDtoResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponseDtoResult"
                }
              }
            }
          }
        }
      }
    },
    "/transactionStatus": {
      "get": {
        "tags": [
          "TransactionStatus"
        ],
        "summary": "Get account detail endpoint",
        "parameters": [
          {
            "name": "ReferenceNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[0-9]{11}$",
              "maxLength": 11,
              "minLength": 11,
              "nullable": true,
              "example": "89712308711"
            },
            "description": ""
          },
          {
            "name": "OriginalReferenceNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[0-9]{11}$",
              "maxLength": 11,
              "minLength": 11,
              "nullable": true,
              "example": "89712308766"
            }
          },
          {
            "name": "Hash",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9]{128}$",
              "maxLength": 128,
              "minLength": 128,
              "nullable": true,
              "example": "804e3ff8bbdcf39db98387c3c8f2e2797db12fd234c26ebeeec1cb18f81f7ee46df7bd623a1d96cebcf9dcc721806495ba061cf74e9d19e98a86a019c6916a2d"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponseResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              }
            }
          }
        }
      }
    },
    "/getSalutations": {
      "get": {
        "tags": [
          "Utility"
        ],
        "summary": "Gets all salutations",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringListResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringListResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              }
            }
          }
        }
      }
    },
    "/getMaritalStatuses": {
      "get": {
        "tags": [
          "Utility"
        ],
        "summary": "Gets all marital statuses",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringListResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringListResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "OperationResponse": {
        "type": "object",
        "properties": {
          "referenceNumber": {
            "type": "string",
            "pattern": "^[0-9]{5,15}+$",
            "maxLength": 15,
            "minLength": 5,
            "nullable": true
          },
          "resultMessage": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "pattern": "^[a-zA-Z0-9\\s\\.\\,]{1,200}$"
          },
          "availableBalance": {
            "type": "number",
            "format": "double",
            "minimum": -50000,
            "maximum": 10000000
          },
          "totalBalance": {
            "type": "number",
            "format": "double",
            "minimum": -50000,
            "maximum": 10000000
          },
          "resultCode": {
            "type": "integer",
            "format": "int32",
            "minimum": -1,
            "maximum": 9999
          }
        }
      },
      "OperationResponseResult": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/OperationResponse"
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          },
          "error": {
            "type": "string",
            "maxLength": 200,
            "minLength": 0,
            "nullable": true,
            "readOnly": true
          },
          "responseCode": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "pattern": "^[0-9]{1,2}\\/[0-9]{1,2}\\/[0-9]{4}\\s[0-9]{1,2}:[0-9]{1,2}:[0-9]{1,2}\\s[AP]M$",
            "maxLength": 25,
            "minLength": 16,
            "nullable": true
          },
          "isFailure": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "StringResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isSuccess": {
            "type": "boolean",
            "readOnly": true
          },
          "error": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "minLength": 16,
            "maxLength": 25,
            "pattern": "^[0-9]{1,2}\\/[0-9]{1,2}\\/[0-9]{4}\\s[0-9]{1,2}:[0-9]{1,2}:[0-9]{1,2}\\s[AP]M$"
          },
          "isFailure": {
            "type": "boolean",
            "readOnly": true
          },
          "responseCode": {
            "type": "string",
            "pattern": "^[0-9]{3,5}$",
            "maxLength": 5,
            "minLength": 3,
            "nullable": true
          }
        },
        "nullable": true,
        "additionalProperties": false
      },
      "CreateBankAccountDto": {
        "type": "object",
        "additionalProperties": false,
        "nullable": true,
        "title": "",
        "properties": {
          "ReferenceNumber": {
            "type": "string",
            "minLength": 5,
            "maxLength": 20,
            "pattern": "^[0-9]{5,20}$"
          },
          "Salutation": {
            "type": "string",
            "enum": [
              "Mr.",
              "MR.",
              "MS.",
              "Ms.",
              "MRS.",
              "Mrs."
            ]
          },
          "FirstName": {
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[a-zA-Z]{1,20}$",
            "type": "string"
          },
          "MiddleName": {
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[a-zA-Z]{1,20}$",
            "type": "string"
          },
          "LastName": {
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[a-zA-Z]{1,20}$",
            "type": "string"
          },
          "Gender": {
            "type": "string",
            "enum": [
              "MALE",
              "FEMALE",
              "OTHER",
              "M",
              "F"
            ]
          },
          "Email": {
            "type": "string",
            "format": "email",
            "minLength": 4,
            "maxLength": 50,
            "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
          },
          "PhoneNumber": {
            "type": "string",
            "minLength": 10,
            "maxLength": 16,
            "pattern": "^[a-zA-Z0-9()]{10,16}$"
          },
          "DateOfBirth": {
            "type": "string",
            "maxLength": 10,
            "pattern": "^[0-9]{2}\\/[0-9]{2}\\/[0-9]{4}$"
          },
          "Address": {
            "type": "string",
            "minLength": 3,
            "maxLength": 250,
            "pattern": "^[a-zA-Z0-9\\s\\.,]{3,250}$"
          },
          "MaritalStatus": {
            "type": "string",
            "enum": [
              "MARRIED",
              "SINGLE",
              "OTHER",
              "MRIED"
            ]
          },
          "Bvn": {
            "type": "string",
            "minLength": 5,
            "maxLength": 30,
            "pattern": "^[0-9]{5,30}$"
          },
          "Hash": {
            "maxLength": 128,
            "minLength": 128,
            "pattern": "^[a-zA-Z0-9]{128}$",
            "type": "string"
          }
        },
        "required": [
          "ReferenceNumber",
          "Salutation",
          "FirstName",
          "MiddleName",
          "LastName",
          "Gender",
          "Email",
          "PhoneNumber",
          "DateOfBirth",
          "Address",
          "MaritalStatus",
          "Bvn",
          "Hash"
        ]
      },
      "CashinDto": {
        "required": [
          "Amount",
          "CreditAccountNumber",
          "Hash",
          "Narration",
          "ReferenceNumber"
        ],
        "type": "object",
        "additionalProperties": false,
        "example": {
          "Amount": 10,
          "ReferenceNumber": "89712308766",
          "CreditAccountNumber": "1300001363",
          "Narration": "please pay money into my accpunt",
          "Hash": "eeba6261f61c8e7c007bc5e91f6e69a2bbf552802ed74df3103f71f67e16c1c0466d60266255368b569956a69904998e0d190e8c79d1cd57c3c3f521a3f8e65a"
        },
        "properties": {
          "ReferenceNumber": {
            "maxLength": 11,
            "minLength": 11,
            "pattern": "^[0-9]{11}$",
            "type": "string"
          },
          "CreditAccountNumber": {
            "maxLength": 10,
            "minLength": 10,
            "pattern": "^[0-9]{10}$",
            "type": "string"
          },
          "Amount": {
            "maximum": 100000000,
            "minimum": 10,
            "type": "number",
            "format": "double"
          },
          "Narration": {
            "type": "string",
            "maxLength": 200,
            "minLength": 1,
            "pattern": "^[a-zA-Z\\s]{1,200}+$"
          },
          "Hash": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{128}$",
            "maxLength": 128,
            "minLength": 128
          }
        },
        "nullable": true
      },
      "AccountToDebitOneTimeInitiateRequestDto": {
        "required": [
          "Amount",
          "DebitAccountNumber",
          "Hash",
          "Narration",
          "ReferenceNumber"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ReferenceNumber": {
            "maxLength": 11,
            "minLength": 11,
            "pattern": "^[0-9]{11}$",
            "type": "string"
          },
          "DebitAccountNumber": {
            "maxLength": 10,
            "minLength": 10,
            "pattern": "^[0-9]{10}$",
            "type": "string"
          },
          "Amount": {
            "maximum": 10000000,
            "minimum": 1,
            "type": "number",
            "format": "double"
          },
          "Narration": {
            "type": "string",
            "maxLength": 200,
            "minLength": 1,
            "pattern": "^[a-zA-Z\\s]{1,200}$"
          },
          "Hash": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{128}$",
            "maxLength": 128,
            "minLength": 128
          }
        },
        "nullable": true
      },
      "AccountToDebitOneTimeValidateRequestDto": {
        "required": [
          "DebitAccountNumber",
          "Hash",
          "OriginalReferenceNumber",
          "ReferenceNumber",
          "validationCode"
        ],
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ReferenceNumber": {
            "maxLength": 11,
            "minLength": 11,
            "pattern": "^[0-9]{11}$",
            "type": "string"
          },
          "OriginalReferenceNumber": {
            "maxLength": 11,
            "minLength": 11,
            "pattern": "^[0-9]{11}$",
            "type": "string"
          },
          "DebitAccountNumber": {
            "maxLength": 10,
            "minLength": 10,
            "pattern": "^[0-9]{10}$",
            "type": "string"
          },
          "validationCode": {
            "pattern": "^[0-9]{4}$",
            "minLength": 4,
            "maxLength": 4,
            "type": "string"
          },
          "Hash": {
            "maxLength": 128,
            "minLength": 128,
            "pattern": "^[a-zA-Z0-9]{128}$",
            "type": "string"
          }
        },
        "nullable": true
      },
      "HashData": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Data": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{1,200}$",
            "maxLength": 200,
            "nullable": true
          }
        },
        "nullable": true
      },
      "InitiateOtpCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ReferenceNumber": {
            "type": "string",
            "pattern": "^[0-9]{11}$",
            "maxLength": 11,
            "minLength": 11,
            "nullable": true
          },
          "DebitAccountNumber": {
            "type": "string",
            "pattern": "^[0-9]{10}$",
            "maxLength": 10,
            "minLength": 10,
            "nullable": true
          },
          "Hash": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{128}$",
            "maxLength": 128,
            "minLength": 128,
            "nullable": true
          },
          "SecretKey": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{12}$",
            "maxLength": 12,
            "minLength": 12,
            "nullable": true
          },
          "Username": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{4,12}$",
            "maxLength": 12,
            "minLength": 4,
            "nullable": true
          }
        },
        "nullable": true
      },
      "TransactionResponseDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "IsSuccessful": {
            "type": "boolean"
          },
          "Message": {
            "type": "string",
            "maxLength": 200,
            "minLength": 1,
            "pattern": "^[a-zA-Z\\s]{1,200}$",
            "nullable": true
          },
          "TransactionReferenceNumber": {
            "type": "string",
            "pattern": "^[0-9]{11}$",
            "maxLength": 11,
            "minLength": 11,
            "nullable": true
          },
          "ResultCode": {
            "type": "integer",
            "minimum": -1,
            "maximum": 9999,
            "format": "int32"
          },
          "FeildI27": {
            "type": "string",
            "nullable": true
          },
          "ResultMessage": {
            "type": "string",
            "maxLength": 200,
            "minLength": 1,
            "pattern": "^[a-zA-Z\\s]{1,20}$",
            "nullable": true
          }
        },
        "nullable": true
      },
      "TransactionResponseDtoResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Value": {
            "$ref": "#/components/schemas/TransactionResponseDto"
          },
          "IsSuccess": {
            "type": "boolean",
            "readOnly": true
          },
          "Error": {
            "type": "string",
            "maxLength": 200,
            "minLength": 10,
            "pattern": "^[a-zA-Z\\s]{10,200}$",
            "nullable": true,
            "readOnly": true
          },
          "Timestamp": {
            "type": "string",
            "pattern": "^[0-9]{1,2}\\/[0-9]{1,2}\\/[0-9]{4}\\s[0-9]{1,2}:[0-9]{1,2}:[0-9]{1,2}\\s[AP]M$",
            "maxLength": 25,
            "minLength": 16,
            "nullable": true
          },
          "ResponseCode": {
            "type": "string",
            "pattern": "^[0-9]{4}$",
            "maxLength": 4,
            "minLength": 4,
            "nullable": true
          },
          "IsFailure": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "nullable": true
      },
      "StringListResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Value": {
            "type": "array",
            "minItems": 2,
            "maxItems": 40,
            "items": {
              "type": "string",
              "pattern": "^[a-zA-Z\\s]+$",
              "minLength": 2,
              "maxLength": 20,
              "nullable": true
            },
            "nullable": true,
            "readOnly": true
          },
          "IsSuccess": {
            "type": "boolean",
            "readOnly": true
          },
          "Error": {
            "type": "string",
            "maxLength": 200,
            "minLength": 10,
            "pattern": "^[a-zA-Z\\s]+$",
            "nullable": true,
            "readOnly": true
          },
          "Timestamp": {
            "type": "string",
            "pattern": "^[0-9]{1,2}\\/[0-9]{1,2}\\/[0-9]{4}\\s[0-9]{1,2}:[0-9]{1,2}:[0-9]{1,2}\\s[AP]M$",
            "maxLength": 25,
            "minLength": 16,
            "nullable": true
          },
          "ResponseCode": {
            "type": "string",
            "pattern": "^[0-9]+$",
            "maxLength": 4,
            "minLength": 4,
            "nullable": true
          },
          "IsFailure": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "nullable": true
      }
    },
    "securitySchemes": {
      "jwt-token": {
        "name": "Authorization",
        "type": "apiKey",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "jwt-token": []
    }
  ]
}